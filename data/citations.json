{
    "python": {
        "tags": ["python"],
        "logo": "img/python.png",
        "language": "python",
        "category": "general",
        "keywords": [],
        "description": "A high-level, general-purpose interpreted programming language.",
        "link": "https://docs.python.org/3/",
        "zenodo_doi": "",
        "attribution_link": "http://citebay.com/how-to-cite/python/",
        "custom_citation": "",
        "dependencies": [],
        "frequently_used": true
    },
    "numpy": {
        "tags": ["numpy"],
        "logo": "img/numpy.svg",
        "logo_background": true,
        "language": "python",
        "category": "general",
        "keywords": [],
        "description": "The fundamental package for scientific computing with Python",
        "link": "https://numpy.org/doc/stable/",
        "zenodo_doi": "",
        "attribution_link": "https://numpy.org/citing-numpy/",
        "custom_citation": "",
        "dependencies": [
            "python"
        ],
        "frequently_used": true
    },
    "matplotlib": {
        "tags": ["Hunter:2007"],
        "logo": "img/matplotlib.webp",
        "language": "python",
        "category": "visualisation",
        "keywords": ["plotting", "figures", "graphs"],
        "description": "Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python. Matplotlib makes easy things easy and hard things possible.",
        "link": "https://matplotlib.org/",
        "zenodo_doi": "",
        "attribution_link": "https://matplotlib.org/stable/users/project/citing.html",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "python"
        ],
        "frequently_used": true
    },
    "astropy": {
        "tags": ["astropy:2013", "astropy:2018", "astropy:2022"],
        "logo": "img/astropy.png",
        "language": "python",
        "category": "general",
        "keywords": ["astronomy", "astrophysics"],
        "description": "The astropy package contains key functionality and common tools needed for performing astronomy and astrophysics with Python.",
        "link": "https://docs.astropy.org/en/stable/",
        "zenodo_doi": "",
        "attribution_link": "https://www.astropy.org/acknowledging.html",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "matplotlib",
            "python"
        ],
        "frequently_used": true
    },
    "scipy": {
        "tags": ["2020SciPy-NMeth"],
        "logo": "img/scipy.svg",
        "language": "python",
        "category": "general",
        "keywords": [],
        "description": "Fundamental algorithms for scientific computing in Python",
        "link": "https://docs.scipy.org/doc/scipy/reference/",
        "zenodo_doi": "10.5281/zenodo.595738",
        "attribution_link": "https://scipy.org/citing-scipy/",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "python"
        ],
        "frequently_used": true
    },
    "pandas": {
        "tags": ["mckinney-proc-scipy-2010"],
        "logo": "img/pandas.svg",
        "language": "python",
        "category": "Data Handling",
        "keywords": ["dataframes", "data manipulation"],
        "description": "pandas is an open source, BSD-licensed library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language.",
        "link": "https://pandas.pydata.org/docs/",
        "zenodo_doi": "10.5281/zenodo.3509134",
        "attribution_link": "https://pandas.pydata.org/about/citing.html",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "python"
        ],
        "frequently_used": true
    },
    "seaborn": {
        "tags": ["Waskom2021"],
        "logo": "img/seaborn.svg",
        "language": "python",
        "category": "visualisation",
        "keywords": ["plotting", "figures", "graphs"],
        "description": "Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.",
        "link": "https://seaborn.pydata.org/",
        "zenodo_doi": "",
        "attribution_link": "https://seaborn.pydata.org/citing.html",
        "custom_citation": "",
        "dependencies": [
            "matplotlib",
            "numpy",
            "pandas"
        ]
    },
    "ADS":{
        "tags": [],
        "logo": "https://ui.adsabs.harvard.edu/help/img/bbb_assets/ads_partial_logo_dark_background.svg",
        "language": "java",
        "category": "library",
        "keywords": ["library", "references", "papers"],
        "description": "The SAO/NASA Astrophysics Data System (ADS) is a digital library portal for researchers in astronomy and physics, operated by the Smithsonian Astrophysical Observatory (SAO) under a NASA grant.",
        "link": "https://ui.adsabs.harvard.edu/about/",
        "zenodo_doi": "",
        "attribution_link": "https://ui.adsabs.harvard.edu/about/",
        "custom_citation": "This research has made use of the Astrophysics Data System, funded by NASA under Cooperative Agreement 80NSSC21M00561.",
        "frequently_used": true
    },
    "legwork": {
        "tags": ["LEGWORK_joss", "LEGWORK_apjs"],
        "logo": "img/legwork.png",
        "language": "python",
        "category": "gravitational waves",
        "keywords": ["LISA", "double compact objects", "inspiral"],
        "description": "LEGWORK (LISA Evolution and Gravitational Wave ORbit Kit) is a python package designed to calculate signal-to-noise ratios for GWs emitted from inspiraling binary systems that are potentially observable by LISA.",
        "link": "https://legwork.readthedocs.io/en/stable/",
        "zenodo_doi": "10.5281/zenodo.5821187",
        "attribution_link": "https://legwork.readthedocs.io/en/stable/cite.html",
        "custom_citation": "",
        "dependencies": [
            "python",
            "numpy",
            "Numba",
            "scipy",
            "astropy",
            "matplotlib",
            "seaborn",
            "schwimmbad"
        ]
    },
    "MESA": {
        "tags": ["Paxton2011", "Paxton2013", "Paxton2015", "Paxton2018", "Paxton2019", "Jermyn2023",
                 "Rogers2002", "Saumon1995", "Irwin2004", "Timmes2000", "Potekhin2010", "Jermyn2021",
                 "Iglesias1993", "Iglesias1996", "Ferguson2005", "Poutanen2017", "Cassisi2007", "Blouin2020",
                 "Cyburt2010", "Angulo1999", "Fuller1985", "Oda1994", "Langanke2000", "Chugunov2007",
                 "Itoh1996", "Eggleton1983", "Ritter1988"],
        "logo": "img/mesa.png",
        "language": "fortran",
        "category": "stars",
        "keywords": ["stellar evolution", "stellar structure", "stellar astrophysics"],
        "description": "Modules for Experiments in Stellar Astrophysics (MESA) is an open-source 1D stellar evolution code.",
        "link": "http://mesa.sourceforge.net/",
        "zenodo_doi": "",
        "attribution_link": "http://mesa.sourceforge.net/citing.html",
        "custom_citation": "This work uses Modules for Experiments in Stellar Astrophysics \\citep[MESA][]{Paxton2011, Paxton2013, Paxton2015, Paxton2018, Paxton2019, Jermyn2023}. The MESA EOS is a blend of the OPAL \\citep{Rogers2002}, SCVH \\citep{Saumon1995}, FreeEOS \\citep{Irwin2004}, HELM \\citep{Timmes2000}, PC \\citep{Potekhin2010}, and Skye \\citep{Jermyn2021} EOSes. Radiative opacities are primarily from OPAL \\citep{Iglesias1993, Iglesias1996}, with low-temperature data from \\citet{Ferguson2005} and the high-temperature, Compton-scattering dominated regime by \\citet{Poutanen2017}.  Electron conduction opacities are from \\citet{Cassisi2007} and \\citet{Blouin2020}. Nuclear reaction rates are from JINA REACLIB \\citep{Cyburt2010}, NACRE \\citep{Angulo1999} and additional tabulated weak reaction rates \\citet{Fuller1985, Oda1994, Langanke2000}.  Screening is included via the prescription of \\citet{Chugunov2007}. Thermal neutrino loss rates are from \\citet{Itoh1996}. Roche lobe radii in binary systems are computed using the fit of \\citet{Eggleton1983}.  Mass transfer rates in Roche lobe overflowing binary systems are determined following the prescription of \\citet{Ritter1988}.\\footnote{Note this is only valid for the default settings of MESA, adjust as necessary for custom settings used.}"
    },
    "gyre": {
        "tags": ["Townsend+2013", "Townsend+2018", "Goldstein+2020", "Sun+2023"],
        "logo": "img/gyre.webp",
        "language": "python",
        "category": "stars",
        "keywords": ["asteroseismology", "stellar oscillations", "stellar pulsations"],
        "description": "GYRE is a stellar oscillation code. Given an input stellar model, GYRE calculates the eigenfrequencies and eigenfunctions for the normal oscillation modes of the model.",
        "link": "https://gyre.readthedocs.io/en/stable/",
        "zenodo_doi": "",
        "attribution_link": "https://gyre.readthedocs.io/en/stable/user-guide/preliminaries.html#citing-gyre",
        "custom_citation": ""
    },
    "COMPAS": {
        "tags": ["COMPAS", "Barrett2018", "Broekgaarden2019", "Neijssel2019", "Stevenson2019", "Chattopadhyay2020", "Riley2021"],
        "logo": "img/COMPAS.png",
        "language": "c++",
        "category": "population synthesis",
        "keywords": ["population synthesis", "binary stars", "double compact objects", "gravitational waves"],
        "description": "Compact Object Mergers: Population Astrophysics and Statistics (COMPAS) combines tools for statistical analysis and model selection with rapid population synthesis, allowing inferences to be made about the details of stellar and binary evolution.",
        "link": "https://compas.science/docs",
        "zenodo_doi": "",
        "attribution_link": "https://compas.readthedocs.io/en/latest/pages/how-to-cite.html",
        "custom_citation": "Simulations in this paper made use of the COMPAS rapid binary population synthesis code (version X.Y.Z\\footnote{TODO: Update version number}), which is freely available at \\url{http://github.com/TeamCOMPAS/COMPAS} \\citep{COMPAS}. Model of gravitational wave selection effects based on \\citet{Barrett2018}. The STROOPWAFEL adaptive importance sampling algorithm is from \\citet{Broekgaarden2019}. Integration over cosmic star formation history outlined in \\citep{Neijssel2019}. COMPAS' model of (pulsational) pair instability supernova is from \\citet{Stevenson2019}. Pulsar spin and magnetic field evolution is from \\citet{Chattopadhyay2020}. Model of chemically homogeneous evolution is from \\citet{Riley2021}.",
        "extra_bibtex": "@PREAMBLE{{\\providecommand{\\noopsort}[1]{}}}"
    },
    "COSMIC": {
        "tags": ["Breivik2020"],
        "logo": "img/cosmic.png",
        "language": "python",
        "category": "population synthesis",
        "keywords": ["population synthesis", "binary stars", "double compact objects", "gravitational waves"],
        "description": "COSMIC (Compact Object Synthesis and Monte Carlo Investigation Code) is a rapid binary population synthesis suite with a special focus of generating compact binary populations.",
        "link": "https://cosmic-popsynth.github.io/docs/",
        "zenodo_doi": "10.5281/zenodo.3382152",
        "attribution_link": "https://github.com/COSMIC-PopSynth/COSMIC/blob/develop/README.md",
        "custom_citation": "",
        "dependencies": [
            "python",
            "numpy",
            "scipy",
            "astropy",
            "matplotlib",
            "seaborn",
            "h5py",
            "tqdm",
            "pandas",
            "schwimmbad"
        ]
    },
    "gala": {
        "tags": ["gala_JOSS"],
        "logo": "img/gala.png",
        "language": "python",
        "category": "galactic dynamics",
        "keywords": ["dynamics", "galaxy", "potential"],
        "description": "gala is an Astropy-affiliated Python package that aims to provide efficient tools for performing common tasks needed in Galactic Dynamics research.",
        "link": "http://gala.adrian.pw/",
        "zenodo_doi": "10.5281/zenodo.593786",
        "attribution_link": "http://gala.adrian.pw/en/latest/index.html",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "astropy",
            "Cython"
        ]
    },
    "showyourwork": {
        "tags": ["Luger2021"],
        "logo": "img/showyourwork.png",
        "language": "latex",
        "category": "Manuscript preparation",
        "keywords": ["latex", "paper with code", "workflow management"],
        "description": "Showyourwork! is a workflow management tool for open source scientific articles.",
        "link": "https://show-your.work/en/latest/",
        "zenodo_doi": "",
        "attribution_link": "https://show-your.work/en/latest/attribution/",
        "custom_citation": ""
    },
    "emcee": {
        "tags": ["emcee-Foreman-Mackey-2013"],
        "logo": "img/emcee.png",
        "language": "python",
        "category": "statistics",
        "keywords": ["MCMC", "statistics", "sampling", "markov chain"],
        "description": "emcee is a stable, well tested Python implementation of the affine-invariant ensemble sampler for Markov chain Monte Carlo (MCMC) proposed by Goodman & Weare (2010).",
        "link": "https://emcee.readthedocs.io/",
        "zenodo_doi": "10.5281/zenodo.1297476",
        "attribution_link": "https://github.com/dfm/emcee",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "h5py",
            "matplotlib"
        ]
    },
    "corner.py": {
        "tags": ["corner-Foreman-Mackey-2016"],
        "logo": "img/corner.png",
        "language": "python",
        "category": "statistics",
        "keywords": ["corner", "statistics", "plotting", "histogram"],
        "description": "corner.py is a Python module that uses matplotlib to visualize multidimensional samples using a scatterplot matrix.",
        "link": "https://corner.readthedocs.io/en/latest/",
        "zenodo_doi": "10.5281/zenodo.591491",
        "attribution_link": "https://corner.readthedocs.io/en/latest/#attribution",
        "custom_citation": "",
        "dependencies": [
            "matplotlib"
        ]
    },
    "astroBlend": {
        "tags": ["AstroBlend:2016"],
        "logo": "img/AstroBlend.png",
        "language": "python",
        "category": "visualisation",
        "keywords": ["blender", "visualization", "plotting", "yt"],
        "description": " Combine artistic 3D models with computational astrophysics datasets and win the internet.",
        "link": "https://www.astroblend.com/getstarted.html",
        "zenodo_doi": "",
        "attribution_link": "",
        "custom_citation": ""
    },
    "Jupyter": {
        "tags": ["2007CSE.....9c..21P", "kluyver2016jupyter"],
        "logo": "img/jupyter.png",
        "language": "python",
        "category": "general",
        "keywords": ["jupyter", "notebook", "plotting", "coding"],
        "description": "Free software, open standards, and web services for interactive computing across all programming languages",
        "link": "https://jupyter.org/",
        "zenodo_doi": "",
        "attribution_link": "http://citebay.com/how-to-cite/jupyter-notebook/",
        "custom_citation": "",
        "dependencies": [
            "python"
        ],
        "frequently_used": true
    },
    "h5py": {
        "tags": ["collette_python_hdf5_2014"],
        "logo": "img/HDF5.png",
        "language": "python",
        "category": "Data Handling",
        "keywords": ["Data Handling", "data analysis", "plotting", "coding"],
        "description": "The h5py package is a Pythonic interface to the HDF5 binary data format.",
        "link": "https://docs.h5py.org/en/stable/",
        "zenodo_doi": "10.5281/zenodo.594310",
        "attribution_link": "https://docs.h5py.org/en/stable/licenses.html",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "Cython"
        ]
    },
    "ChaNGa": {
        "tags": ["Jetley2008", "Jetley2010", "Menon2015"],
        "logo": "",
        "language": "c++",
        "category": "n-body",
        "keywords": ["n-body", "galaxy formation", "galaxy evolution"],
        "description": "ChaNGa (Charm N-body GrAvity solver) is a code to perform collisionless N-body simulations.",
        "link": "https://github.com/N-BodyShop/changa/wiki",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/N-BodyShop/changa",
        "custom_citation": ""
    },
    "FIRE-2": {
        "tags": ["Wetzel2023", "Hopkins2015", "Hopkins2018a"],
        "logo": "img/FIRE.png",
        "language": "C",
        "category": "n-body",
        "keywords": ["n-body", "galaxy formation", "galaxy evolution", "feedback"],
        "description": "The FIRE: Feedback In Realistic Environments project seeks to develop and explore cosmological simulations of galaxy formation that directly resolve the interstellar medium of individual galaxies while capturing their cosmological environment.",
        "link": "http://flathub.flatironinstitute.org/fire",
        "zenodo_doi": "",
        "attribution_link": "http://flathub.flatironinstitute.org/fire",
        "custom_citation": "We use simulations from the FIRE-2 public data release \\citep{Wetzel2023}. The FIRE-2 cosmological zoom-in simulations of galaxy formation are part of the Feedback In Realistic Environments (FIRE) project, generated using the Gizmo code \\citep{Hopkins2015} and the FIRE-2 physics model \\citep{Hopkins2018a}."
    },
    "stella": {
        "tags": ["Feinstein2020"],
        "logo": "img/stella.png",
        "language": "python",
        "category": "stars",
        "keywords": ["flares", "stellar activity", "machine learning", "neural networks"],
        "description": "stella is a Python package to create and train a neural network to identify stellar flares.",
        "link": "https://github.com/afeinstein20/stella",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/afeinstein20/stella",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "astropy",
            "astroquery",
            "matplotlib",
            "seaborn",
            "pandas",
            "scikit-learn",
            "tensorflow",
            "tqdm"
        ]
    },
    "GWFish": {
        "tags": ["DupletsaHarms2023"],
        "logo": "img/gwfish-1.png",
        "language": "python",
        "category": "gravitational waves",
        "keywords": ["gravitational waves", "fisher", "black holes"],
        "description": "Simulation of gravitational-wave detector networks with Fisher-matrix PE",
        "link": "https://github.com/janosch314/GWFish",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/janosch314/GWFish",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "astropy",
            "matplotlib",
            "tqdm",
            "sympy",
            "pandas"
        ]
    },
    "CAMELS": {
        "tags": [ "CAMELS_presentation", "CAMELS_DR1", "CAMELS_DR2"],
        "logo": "img/CAMELS.png",
        "language": "python",
        "category": "population synthesis",
        "keywords": ["CAMELS", "cosmology simulations", "galaxies"],
        "description": "CAMELS stands for Cosmology and Astrophysics with MachinE Learning Simulations, and it is a project that aims at building bridges between cosmology and astrophysics through numerical simulations and machine learning.",
        "link": "https://camels.readthedocs.io/en/latest/",
        "zenodo_doi": "",
        "attribution_link": "https://camels.readthedocs.io/en/latest/citation.html",
        "custom_citation": "This work made use of \\citet{CAMELS_presentation} \\footnote{TODO: If you use data from CAMELS-SAM please consider citing the CMD paper  \\citet{CMD} If you use data from CAMELS-SAM please consider citing the CAMELS-SAM paper \\citet{CAMELS-SAM}}"
    },
    "JAX": {
        "tags": [ "jax2018github"],
        "logo": "img/jax.png",
        "language": "python",
        "category": "computing",
        "keywords": ["jax", "computing", "AI"],
        "description": "JAX is a Python library for accelerator-oriented array computation and program transformation, designed for high-performance numerical computing and large-scale machine learning.",
        "link": "https://github.com/google/jax?tab=readme-ov-file",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/google/jax?tab=readme-ov-file#citing-jax",
        "custom_citation": ""
    },
    "Cython": {
        "tags": [ "cython:2011"],
        "logo": "img/cython.png",
        "language": "python",
        "category": "computing",
        "keywords": ["C++", "computing", "python"],
        "description": "Cython is a Python language extension that allows explicit type declarations and is compiled directly to C. As such, it addresses Python's large overhead for numerical loops and the difficulty of efficiently using existing C and Fortran code, which Cython can interact with natively.",
        "link": "https://github.com/cython/cython?tab=readme-ov-file",
        "zenodo_doi": "",
        "attribution_link": "https://cython.org/",
        "custom_citation": ""
    },
    "scikit-image": {
        "tags": [ "scikit-image"],
        "logo": "img/scikit-image.png",
        "language": "python",
        "category": "visualisation",
        "keywords": ["python", "computing", "visualization"],
        "description": "scikit-image is a collection of algorithms for image processing. ",
        "link": "https://scikit-image.org/",
        "zenodo_doi": "",
        "attribution_link": "https://scikit-image.org/",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy"
        ]
    },
    "scikit-learn": {
        "tags": [ "scikit-learn", "sklearn_api"],
        "logo": "img/scikit-learn.png",
        "language": "python",
        "category": "machine learning",
        "keywords": ["python", "computing", "machine learning"],
        "description": "scikit-learn is a Python module for machine learning built on top of SciPy and is distributed under the 3-Clause BSD license. ",
        "link": "https://scikit-learn.org/stable/",
        "zenodo_doi": "10.5281/zenodo.591564",
        "attribution_link": "https://github.com/scikit-learn/scikit-learn?tab=readme-ov-file",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy"
        ]
    },
    "Numba": {
        "tags": [ "numba:2015"],
        "logo": "img/numba.png",
        "logo_background": true,
        "language": "python",
        "category": "computing",
        "keywords": ["machine learning", "computing", "python"],
        "description": "Numba is an open source JIT compiler that translates a subset of Python and NumPy code into fast machine code.",
        "link": "https://numba.pydata.org/",
        "zenodo_doi": "10.5281/zenodo.4343230",
        "attribution_link": "https://numba.readthedocs.io/en/stable/user/faq.html#how-do-i-reference-cite-acknowledge-numba-in-other-work",
        "custom_citation": "",
        "dependencies": [
            "numpy"
        ]
    },
    "IRAF":{
        "tags": ["1993ASPC...52..173T", "1986SPIE..627..733T"],
        "logo": "img/IRAF.png",
        "language": "C",
        "category": "imaging",
        "keywords": ["imaging", "data reduction", "observations", "images"],
        "description": "IRAF is the Image Reduction and Analysis Facility, a general purpose software system for the reduction and analysis of astronomical data.",
        "link": "https://iraf-community.github.io/",
        "zenodo_doi": "",
        "attribution_link": "https://iraf-community.github.io/",
        "custom_citation": ""
    },
    "julia": {
        "tags": ["bezanson2017julia"],
        "logo": "img/julia.png",
        "language": "julia",
        "category": "general",
        "keywords": ["programming", "computing"],
        "description": "The Julia programming language is a flexible dynamic language, appropriate for scientific and numerical computing, with performance comparable to traditional statically-typed languages.",
        "link": "https://docs.julialang.org/en/v1/",
        "zenodo_doi": "",
        "attribution_link": "https://epubs.siam.org/doi/10.1137/141000671",
        "custom_citation": ""
    },
    "Lightkurve": {
        "tags": [
            "2018ascl.soft12013L"
        ],
        "logo": "",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "photometry",
            " Kepler",
            " TESS"
        ],
        "description": "Lightkurve offers a user-friendly way to analyze time series data on the brightness of planets, stars, and galaxies. The package is focused on supporting science with NASA’s Kepler and TESS.",
        "link": "https://docs.lightkurve.org/",
        "attribution_link": "https://docs.lightkurve.org/about/citing.html",
        "zenodo_doi": "10.5281/zenodo.1181928",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "astropy",
            "matplotlib",
            "scipy",
            "astroquery",
            "tqdm",
            "pandas",
            "scikit-learn",
            "Bokeh"
        ]
    },
    "Athena++": {
        "tags": [
            "Stone2020"
        ],
        "logo": "img/athena-pp.png",
        "language": "C++",
        "category": "Computing",
        "keywords": [
            "GRMHD",
            "adaptive mesh refinement",
            "magnetohydrodynamic"
        ],
        "description": "Athena++ radiation GRMHD code and adaptive mesh refinement (AMR) framework",
        "link": "https://www.athena-astro.app/",
        "attribution_link": "https://github.com/PrincetonUniversity/athena?tab=readme-ov-file",
        "zenodo_doi": "10.5281/zenodo.4455879",
        "custom_citation": ""
    },
    "tardis": {
        "tags": [
            "2014MNRAS.440..387K",
            "2019A&A...621A..29V",
            "kerzendorf_wolfgang_2019_2590539"
        ],
        "logo": "img/tardis.png",
        "language": "Python",
        "category": "Transients",
        "keywords": [
            "supernova",
            "spectral modelling",
            "radiative transfer. supernovae"
        ],
        "description": "An open-science software to simulate and analyse supernovae and other transients",
        "link": "https://tardis-sn.github.io/",
        "attribution_link": "https://tardis-sn.github.io/credits/",
        "zenodo_doi": "10.5281/zenodo.592480",
        "custom_citation": "This research made use of \\textsc{Tardis}, a community-developed software package for spectral synthesis in supernovae \\citep{2014MNRAS.440..387K, kerzendorf_wolfgang_2019_2590539}. The development of \\textsc{Tardis} received support from the Google Summer of Code initiative and from ESA’s Summer of Code in Space program. \\textsc{Tardis} makes extensive use of Astropy \\citep{astropy:2013, astropy:2018, astropy:2022} and PyNE \\url{https://pyne.io/}. The Spectral modeling of type II supernovae is from \\citet{2019A&A...621A..29V}.\\footnote{TODO: remove astropy if already cited, remove 'The Spectral modeling of type II supernovae' if not used}. ",
        "dependencies": [
            "astropy"
        ]
    },
    "CMasher": {
        "tags": [
            "2020JOSS....5.2004V"
        ],
        "logo": "img/CMasher.png",
        "language": "Python",
        "category": "Visualisation",
        "keywords": [
            "colormap",
            "python",
            "data visualization",
            "plotting"
        ],
        "description": "The CMasher package is a collection of scientific colormaps and utility functions for making accessible, informative and cmashing plots in Python.",
        "link": "https://cmasher.readthedocs.io/index.html",
        "attribution_link": "https://cmasher.readthedocs.io/community_guidelines.html",
        "zenodo_doi": "10.5281/zenodo.3637632",
        "custom_citation": "Parts of the results in this work make use of the colormaps in the CMasher package \\citep{2020JOSS....5.2004V}",
        "dependencies": [
            "numpy",
            "matplotlib"
        ]
    },
    "schwimmbad": {
        "tags": [
            "schwimmbad"
        ],
        "logo": "",
        "language": "Python",
        "category": "Multiprocessing",
        "keywords": [
            "multiprocessing",
            "parallelization"
        ],
        "description": "schwimmbad provides a uniform interface to parallel processing pools and enables switching easily between local development (e.g., serial processing or with multiprocessing) and deployment on a cluster or supercomputer (via, e.g., MPI or JobLib).",
        "link": "https://schwimmbad.readthedocs.io/en/stable/",
        "attribution_link": "https://github.com/adrn/schwimmbad",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "python"
        ]
    },
    "tqdm": {
        "tags": [],
        "logo": "img/tqdm.gif",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "progress bar"
        ],
        "description": "tqdm is a fast, extensible progress bar for loops and pipelines.",
        "link": "https://tqdm.github.io/",
        "attribution_link": "https://tqdm.github.io/",
        "zenodo_doi": "10.5281/zenodo.595120",
        "custom_citation": "",
        "dependencies": [
            "python"
        ]
    },
    "tensorflow" : {
        "tags": [],
        "logo": "img/tensorflow.png",
        "language": "Python",
        "category": "Machine Learning",
        "keywords": [
            "machine learning",
            "deep learning",
            "neural networks"
        ],
        "description": "TensorFlow is an end-to-end open source platform for machine learning. It has a comprehensive, flexible ecosystem of tools, libraries, and community resources that lets researchers push the state-of-the-art in ML and developers easily build and deploy ML-powered applications.",
        "link": "https://www.tensorflow.org/api_docs/python/tf",
        "attribution_link": "https://github.com/tensorflow/tensorflow/blob/master/CITATION.cff",
        "zenodo_doi": "10.5281/zenodo.4724125",
        "custom_citation": "",
        "dependencies": [
            "h5py",
            "JAX",
            "numpy",
            "scipy"
        ]
    },
    "astroquery": {
        "tags": [
            "2019AJ....157...98G"
        ],
        "logo": "img/astropy.png",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "data retrieval",
            "astronomy",
            "data"
        ],
        "description": "astroquery is a set of tools for querying astronomical web forms and databases.",
        "link": "https://astroquery.readthedocs.io/en/latest/",
        "attribution_link": "https://github.com/astropy/astroquery/blob/main/astroquery/CITATION",
        "zenodo_doi": "10.5281/zenodo.591669",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "numpy"
        ]
    },
    "Bokeh": {
        "tags": ["Bokeh"],
        "logo": "img/bokeh.png",
        "language": "Python",
        "category": "Visualisation",
        "keywords": [
            "interactive",
            "plotting",
            "visualization"
        ],
        "description": "Bokeh is a Python library for creating interactive visualizations for modern web browsers.",
        "link": "https://docs.bokeh.org/en/latest/",
        "attribution_link": "https://docs.bokeh.org/en/1.0.1/docs/citation.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "pandas"
        ]
    },
    "sympy": {
        "tags": [],
        "logo": "img/sympy.png",
        "language": "Python",
        "category": "Computing",
        "keywords": [
            "symbolic computation",
            "mathematics",
            "algebra"
        ],
        "description": "SymPy is a Python library for symbolic mathematics.",
        "link": "https://docs.sympy.org/latest/index.html",
        "attribution_link": "https://github.com/sympy/sympy/blob/master/CITATION.cff",
        "zenodo_doi": "10.5281/zenodo.594254",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "Cython"
        ]
    },
    "Arepo": {
        "tags": [
            "2010MNRAS.401..791S",
            "2011MNRAS.418.1392P",
            "2013MNRAS.432..176P",
            "2016MNRAS.455.1134P",
            "2020ApJS..248...32W"
        ],
        "logo": "img/Arepo.png",
        "language": "C",
        "category": "N-body",
        "keywords": [],
        "description": "AREPO is a massively parallel code for gravitational n-body systems and hydrodynamics, both on Newtonian as well as cosmological background.",
        "link": "https://arepo-code.org/",
        "attribution_link": "https://gitlab.mpcdf.mpg.de/vrs/arepo",
        "zenodo_doi": "",
        "custom_citation": "A description of the numerical algorithms employed by the Arepo code is given in the original code papers \\citep{2010MNRAS.401..791S,2011MNRAS.418.1392P,2013MNRAS.432..176P,2016MNRAS.455.1134P} and the release paper of the public version \\citep{2020ApJS..248...32W}.",
        "dependencies": []
    },
    "REBOUND": {
        "tags": [
            "2012A&A...537A.128R" 
        ],
        "logo": "img/REBOUND.png",
        "language": [
            "Python",
            "C"
        ],
        "category": "N-body",
        "keywords": [
            "whfast",
            "ias15",
            "nbody",
            "planetary dynamics"
        ],
        "description": "REBOUND is an N-body integrator, i.e. a software package that can integrate the motion of particles under the influence of gravity.",
        "link": "https://rebound.readthedocs.io/en/latest/",
        "attribution_link": "https://rebound.readthedocs.io/en/latest/#acknowledgements",
        "zenodo_doi": "10.5281/zenodo.7808755",
        "custom_citation": "Simulations in this paper made use of the \\textsc{REBOUND} N-body code \\citep{2012A&A...537A.128R} \\footnote{{TODO}: Cite the additional papers that are relevant to your specific REBOUND set-up. See \\url{https://rebound.readthedocs.io/en/latest/\\#acknowledgements} for details on automatically determined this with \\texttt{Simulation.cite()}.}",
        "dependencies": []
    },
    "R": {
        "tags": [
            "R_manual"
        ],
        "logo": "img/R.png",
        "language": "R",
        "category": "Statistics",
        "keywords": ["statistics",
            "r"
        ],
        "description": "The R statistical programming language.",
        "link": "https://cran.r-project.org/manuals.html",
        "attribution_link": "https://cran.r-project.org/doc/FAQ/R-FAQ.html#Citing-R",
        "zenodo_doi": "",
        "custom_citation": "This work made use of \\textsc{R} \\citep{R_manual}. \\footnote{{TODO}: add citations for additional software packages used, see \\url{https://r-pkgs.org/misc.html#sec-misc-inst-citation}}",
        "dependencies": []
    },
    "sunpy": {
        "tags": [
            "sunpy_community2020"
        ],
        "logo": "img/sunpy.png",
        "language": "Python",
        "category": "Solar Physics",
        "keywords": [
            "solar physics",
            "solar",
            "science",
            "sun",
            "wcs",
            "coordinates"
        ],
        "description": "sunpy is a Python software package that provides fundamental tools for accessing, loading and interacting with solar physics data in Python.",
        "link": "https://docs.sunpy.org/en/stable/",
        "attribution_link": "https://docs.sunpy.org/en/stable/citation.html",
        "zenodo_doi": "10.5281/zenodo.591887",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy"
        ]
    },
    "Colossus": {
        "tags": [
            "2018ApJS..239...35D"
        ],
        "logo": "img/Colossus.png",
        "language": "Python",
        "category": "General",
        "keywords": [
            "cosmology",
            "dark matter",
            "halo",
            "large-scale structure"
        ],
        "description": "Colossus is a python toolkit for calculations pertaining to cosmology, the large-scale structure of the universe, and the properties of dark matter halos.",
        "link": "https://bdiemer.bitbucket.io/colossus/",
        "attribution_link": "https://bdiemer.bitbucket.io/colossus/",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "XGA": {
        "tags": [
            "2022arXiv220201236T",
            "2023ascl.soft01012T"
        ],
        "logo": "img/XGA.png",
        "language": "Python",
        "category": "X-ray Astrophysics",
        "keywords": [
            "astronomy",
            "sas",
            "astrophysics",
            "galaxy-clusters",
            "x-ray",
            "xspec",
            "heasoft",
            "x-ray-astronomy",
            "xmm",
            "xmm-science-analysis",
            "xmm-observation",
            "erosita",
            "esass"
        ],
        "description": "X-ray: Generate and Analyse (XGA) is a generalised X-ray astronomy analysis package; given an archive of data it will identify observation relevant to your sources, generate products (with convenient interfaces) and perform analyses.",
        "link": "https://xga.readthedocs.io/",
        "attribution_link": "https://xga.readthedocs.io/en/latest/index.html#bibtex-reference",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "pandas",
            "python",
            "scipy",
            "emcee"
        ]
    },
    "pysersic": {
        "tags": [
            "Pasha2023"
        ],
        "logo": "https://github.com/pysersic/pysersic/blob/main/misc/pysersic.png?raw=true",
        "language": "Python",
        "category": "General",
        "keywords": [
            "profile fitting",
            "galaxy morphology",
            "sersic",
            "bayesian"
        ],
        "description": "A Python package for determining galaxy structural properties via Bayesian inference, accelerated with jax.",
        "link": "https://pysersic.readthedocs.io",
        "attribution_link": "https://github.com/pysersic/pysersic?tab=readme-ov-file#citation",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "JAX"
        ]
    },
    "transformers": {
        "tags": [
            "wolf-etal-2020-transformers"
        ],
        "logo": "img/hf-logo.svg",
        "language": "Python",
        "category": "Machine Learning",
        "keywords": [
            "nlp",
            "machine-learning",
            "natural-language-processing",
            "deep-learning",
            "transformer",
            "speech-recognition",
            "seq2seq",
            "flax",
            "pretrained-models",
            "language-models",
            "nlp-library",
            "language-model",
            "bert",
            "model-hub"
        ],
        "description": "Transformers provides thousands of pretrained models to perform tasks on different modalities such as text, vision, and audio.",
        "link": "https://huggingface.co/docs/transformers/index",
        "attribution_link": "https://github.com/huggingface/transformers?tab=readme-ov-file#citation",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "tensorflow",
            "JAX"
        ]
    },
    "Rosetta": {
        "tags": [
            "leaver-fay_rosetta3_2011"
        ],
        "logo": "https://avatars.githubusercontent.com/u/3856847",
        "language": "C++",
        "category": "Biochemistry",
        "keywords": [
            "proteins",
            "peptides",
            "nucleic acids",
            "DNA",
            "RNA",
            "amino acid",
            "structure prediction",
            "design",
            "Monte Carlo",
            "simulated annealing",
            "docking"
        ],
        "description": "A suite of C++ libraries and applications for designing, docking, and predicting structures of proteins, peptides, nucleic acids, glycans, and other biomolecules.",
        "link": "https://new.rosettacommons.org/docs/latest/Home",
        "attribution_link": "https://new.rosettacommons.org/docs/latest/getting_started/FAQ#frequently-asked-questions_how-to-cite-rosetta-in-papers",
        "zenodo_doi": "",
        "custom_citation": "This research made use of \\texttt{Rosetta} \\citep{leaver-fay_rosetta3_2011}\\footnote{{TODO}: See additional output from Rosetta runs for particular papers to cite for specific Rosetta applications or modules.}",
        "dependencies": [
            "python"
        ]
    },
    "PyNeb": {
        "tags": [
            "2015Luridiana_aap573"
        ],
        "logo": "",
        "language": "Python",
        "category": "Interstellar Medium",
        "keywords": [
            "emission lines",
            "nebulae",
            "recombination lines",
            "collisionally excited lines",
            "emissivities"
        ],
        "description": "PyNeb is a modern python tool to compute emission line emissivities (recombination and collisionally excited lines).",
        "link": "https://github.com/Morisset/PyNeb_devel/tree/master/docs",
        "attribution_link": "https://github.com/Morisset/PyNeb_devel",
        "zenodo_doi": "10.5281/zenodo.1246922",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy"
        ]
    },
    "Rapster": {
        "tags": [
            "Kritos:2022ggc"
        ],
        "logo": "img/Rapster.png",
        "language": "Python",
        "category": "Population Synthesis",
        "keywords": [
            "binary black hole mergers",
            "dynamical formation",
            "star clusters"
        ],
        "description": "Rapid population synthesis code for binary black hole mergers in dynamical environments.",
        "link": "https://github.com/Kkritos/Rapster",
        "attribution_link": "https://github.com/Kkritos/Rapster?tab=readme-ov-file#citingthiswork",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "Inseq": {
        "tags": [
            "sarti-etal-2023-inseq"
        ],
        "logo": "https://inseq.org/en/latest/_static/inseq_logo.png",
        "language": "Python",
        "category": "Machine Learning",
        "keywords": [
            "interpretability",
            "explainable ai",
            "transformers",
            "language models"
        ],
        "description": "Inseq is a Pytorch-based hackable toolkit to democratize the study of interpretability for sequence generation models.",
        "link": "https://inseq.org/en/latest/",
        "attribution_link": "https://github.com/inseq-team/inseq#citing-inseq",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "Jupyter",
            "matplotlib",
            "numpy",
            "python",
            "transformers"
        ]
    },
    "umap-learn": {
        "tags": [
            "mcinnes2018umap-software",
            "2018arXivUMAP"
        ],
        "logo": "img/umap-learn.png",
        "language": "Python",
        "category": "Visualisation",
        "keywords": [
            "visualization",
            "machine-learning",
            "dimensionality-reduction",
            "umap",
            "topological-data-analysis"
        ],
        "description": "Uniform Manifold Approximation and Projection (UMAP) is a dimension reduction technique that can be used for visualisation similarly to t-SNE, but also for general non-linear dimension reduction.",
        "link": "https://umap-learn.readthedocs.io/",
        "attribution_link": "https://github.com/lmcinnes/umap?tab=readme-ov-file#citation",
        "zenodo_doi": "",
        "custom_citation": "This research made use of \\texttt{umap-learn} \\citep{mcinnes2018umap-software, 2018arXivUMAP}\\footnote{{TODO}: include the following if used: the densMAP algorithm \\citep{NBC2020} and the Parametric UMAP algorithm \\citep{SMG2020}.}",
        "dependencies": [
            "numpy",
            "scipy",
            "Numba",
            "scikit-learn",
            "tqdm"
        ]
    },
    "numpyro": {
        "tags": [
            "phan2019composable",
            "bingham2019pyro"
        ],
        "logo": "img/numpyro.png",
        "language": "Python",
        "category": "Library",
        "keywords": [],
        "description": "\"NumPyro is a lightweight probabilistic programming library that provides a NumPy backend for Pyro. We rely on JAX for automatic differentiation and JIT compilation to GPU / CPU.\"",
        "link": "https://num.pyro.ai/en/stable/",
        "attribution_link": "https://num.pyro.ai/en/stable/getting_started.html#citing-numpyro",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "galpy": {
        "tags": [
            "2015ApJS..216...29B"
        ],
        "logo": "img/galpy.png",
        "language": "Python",
        "category": "Galactic Dynamics",
        "keywords": [
            "galaxies",
            "galactic dynamics",
            "dynamics",
            "orbits",
            "actions",
            "distribution functions"
        ],
        "description": "galpy is a Python package for galactic dynamics. It supports orbit integration in a variety of potentials, various distribution functions, and the calculation of action-angle coordinates.",
        "link": "https://docs.galpy.org/",
        "attribution_link": "https://docs.galpy.org/en/latest/#acknowledging-galpy",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "matplotlib",
            "numpy",
            "scipy"
        ]
    },
    "zeus": {
        "tags": [
            "karamanis2021zeus",
            "karamanis2020ensemble"
        ],
        "logo": "img/zeus.png",
        "language": "Python",
        "category": "Statistics",
        "keywords": [
            "mcmc",
            "Bayesian inference",
            "data analysis",
            "sampling",
            "markov chain monte carlo",
            "astronomy",
            "cosmology",
            "posterior"
        ],
        "description": "Lightning-fast MCMC",
        "link": "https://zeus-mcmc.readthedocs.io",
        "attribution_link": "https://github.com/minaskar/zeus",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "scikit-learn"
        ]
    },
    "pocoMC": {
        "tags": [
            "karamanis2022accelerating",
            "karamanis2022pocomc"
        ],
        "logo": "img/pocoMC.png",
        "language": "Python",
        "category": "Statistics",
        "keywords": [
            "Bayesian inference",
            "sampling",
            "model comparison",
            "evidence",
            "data analysis",
            "mcmc",
            "Markov chain Monte Carlo",
            "Preconditioned Monte Carlo",
            "posterior",
            "likelihood"
        ],
        "description": "A Python implementation of Preconditioned Monte Carlo for accelerated Bayesian Computation",
        "link": "https://pocomc.readthedocs.io",
        "attribution_link": "https://github.com/minaskar/pocomc",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy"
        ]
    },
    "Gammapy": {
        "tags": [
            "gammapy:2023"
        ],
        "logo": "img/Gammapy.png",
        "language": "Python",
        "category": "Gamma-ray astrophysics",
        "keywords": [
            "Astronomy",
            "Gamma-rays",
            "Data analysis"
        ],
        "description": "A Python package for gamma-ray astronomy: https://gammapy.org/",
        "link": "https://docs.gammapy.org/",
        "attribution_link": "https://gammapy.org/acknowledging.html",
        "zenodo_doi": "10.5281/zenodo.4701488",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "regions",
            "pyyaml",
            "click",
            "pydantic",
            "iminuit",
            "naima",
            "healpy",
            "tqdm",
            "ipywidgets"
        ]
    },
    "Gradio": {
        "tags": [
            "abid2019gradio"
        ],
        "logo": "img/Gradio.png",
        "language": "Python",
        "category": "Visualisation",
        "keywords": [
            "python",
            "data-science",
            "machine-learning",
            "ui",
            "deep-learning",
            "interface",
            "deploy",
            "models",
            "data-visualization",
            "data-analysis",
            "hacktoberfest"
        ],
        "description": "Gradio is an open-source Python package that allows you to quickly build a demo or web application for your machine learning model, API, or any arbitrary Python function.",
        "link": "https://www.gradio.app/docs",
        "attribution_link": "https://github.com/gradio-app/gradio?tab=readme-ov-file#citation",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "Paicos": {
        "tags": [
            "Berlok_Paicos_A_Python_2024"
        ],
        "logo": "",
        "language": "Python",
        "category": "Visualisation",
        "keywords": [
            "Arepo"
        ],
        "description": "An object-oriented Python package for analysis of (cosmological) simulations performed with Arepo.",
        "link": "https://paicos.readthedocs.io/",
        "attribution_link": "https://github.com/tberlok/paicos",
        "zenodo_doi": "10.5281/zenodo.10994256",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "numpy",
            "python",
            "scipy",
            "Cython",
            "h5py",
            "Numba"
        ]
    },
    "healpy": {
        "tags": [
            "Zonca2019",
            "2005ApJ...622..759G"
        ],
        "logo": "img/healpy.jpeg",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "pixel",
            "healpix",
            "projection",
            "sky"
        ],
        "description": "healpy is a Python package to handle pixelated data on the sphere.",
        "link": "http://healpy.readthedocs.org/",
        "attribution_link": "https://github.com/healpy/healpy/blob/main/CITATION",
        "zenodo_doi": "10.5281/zenodo.2605425",
        "custom_citation": "Some of the results in this paper have been derived using \\texttt{healpy} and the HEALPix package\\footnote{http://healpix.sourceforge.net} \\citep{Zonca2019, 2005ApJ...622..759G}.",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python"
        ]
    },
    "Bilby": {
        "tags": [
            "bilby_paper",
            "bilby_paper_2"
        ],
        "logo": "img/Bilby.jpeg",
        "language": "Python",
        "category": "Gravitational Waves",
        "keywords": [],
        "description": "Bilby: a user-friendly Bayesian inference library.",
        "link": "https://bilby-dev.github.io/bilby/index.html",
        "attribution_link": "https://bilby-dev.github.io/bilby/citing-bilby.html",
        "zenodo_doi": "10.5281/zenodo.14025463",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "corner.py"
        ]
    },
    "spindler": {
        "tags": [
            "valli_longterm_2024"
        ],
    "logo": "img/spindler.png",
        "language": "Python",
        "category": "General",
        "keywords": [
            "circumbinary disk",
            "supermassive black hole binary",
            "binary star formation",
            "post common envelope"
        ],
        "description": "A python package to compute the long-term orbital evolution of a binary interacting with a circumbinary disk",
        "link": "https://spindler.readthedocs.io/en/latest/",
        "attribution_link": "https://github.com/ruggero-valli/spindler/blob/master/README.md#citing-spindler",
        "zenodo_doi": "10.5281/zenodo.10529059",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "pandas",
            "python",
            "scipy"
        ]
    },
    "RAMSES": {
        "tags": [
            "2002A&A...385..337T"
        ],
        "logo": "img/ramses.svg",
        "language": "Fortran",
        "category": "Galactic Dynamics",
        "keywords": [],
        "description": "Ramses is an open source code to model astrophysical systems, featuring self-gravitating, magnetised, compressible, radiative fluid flows. It is based on the Adaptive Mesh Refinement (AMR) technique.",
        "link": "https://ramses-organisation.readthedocs.io/en/latest/",
        "attribution_link": "https://github.com/ramses-organisation/ramses",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "astroML": {
        "tags": [
            "astroML",
            "astroMLText"
        ],
        "logo": "img/astroML.png",
        "language": "Python",
        "category": "Machine Learning",
        "keywords": [],
        "description": "AstroML is a Python module for machine learning and data mining.",
        "link": "https://www.astroml.org/",
        "attribution_link": "https://github.com/astroML/astroML/blob/main/CITATION",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "scikit-learn"
        ]
    },
    "rubin-sim": {
        "tags": [],
        "logo": "img/rubin_sim.svg",
        "logo_background": "true",
        "language": "Python",
        "category": "Simulations",
        "keywords": [
            "lsst",
            "rubin"
        ],
        "description": "A package for helping simulate and evaluate the performance of Rubin C. Observatory’s Legacy Survey of Space and Time (the LSST).",
        "link": "https://rubin-sim.lsst.io/",
        "attribution_link": "https://github.com/lsst/rubin_sim",
        "zenodo_doi": "10.5281/zenodo.7087822",
        "custom_citation": "",
        "dependencies": [
            "python"
        ]
    },
    "Pydantic": {
        "tags": [],
        "logo": "img/pydantic.png",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "python",
            "validation",
            "parsing",
            "json-schema",
            "hints",
            "typing"
        ],
        "description": "Pydantic is the most widely used data validation library for Python.",
        "link": "https://docs.pydantic.dev/latest/",
        "attribution_link": "https://github.com/pydantic/pydantic/blob/main/CITATION.cff",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "Photutils": {
        "tags": [],
        "logo": "img/Photutils.svg",
        "language": "Python",
        "category": "Imaging",
        "keywords": [
            "python",
            "astronomy",
            "photometry",
            "astropy",
            "astropy-affiliated",
            "source-detection"
        ],
        "description": "Photutils is an affiliated package of Astropy that primarily provides tools for detecting and performing photometry of astronomical sources.",
        "link": "https://photutils.readthedocs.io/",
        "attribution_link": "https://photutils.readthedocs.io/en/stable/citation.html",
        "zenodo_doi": "10.5281/zenodo.596036",
        "custom_citation": "This research made use of Photutils, an Astropy package for detection and photometry of astronomical sources.",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "scikit-image"
        ]
    },
    "PetroFit": {
        "tags": [
            "2022AJ....163..202G"
        ],
        "logo": "img/PetroFit.svg",
        "language": "Python",
        "category": "Imaging",
        "keywords": [
            "sersic",
            "petrosian",
            "petrofit"
        ],
        "description": "Python package for calculating Petrosian properties and fitting galaxy light profiles.  PetroFit includes tools for Petrosian profiling and image model  fitting (Sérsic etc.).",
        "link": "https://petrofit.readthedocs.io/en/latest/",
        "attribution_link": "https://petrofit.readthedocs.io/en/latest/citing.html",
        "zenodo_doi": "10.5281/zenodo.6040780",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "numpy",
            "python",
            "scipy",
            "Photutils"
        ]
    },
    "FLEET": {
        "tags": [
            "2020ApJ...904...74G"
        ],
        "logo": "img/FLEET.png",
        "language": "Python",
        "category": "Transients",
        "keywords": [
            "Transients",
            "Supernovae",
            "Machine Learning",
            "Tidal Disruption Events"
        ],
        "description": "A machine learning pipeline designed to predict the probability of transients to be either a superluminous supernova or a tidal disruption event.",
        "link": "https://github.com/gmzsebastian/FLEET/blob/master/README.md",
        "attribution_link": "https://github.com/gmzsebastian/FLEET",
        "zenodo_doi": "10.5281/zenodo.4013964",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "astroquery"
        ]
    },
    "MOSFiT": {
        "tags": [
            "2018ApJS..236....6G",
            "2017ascl.soft10006G"
        ],
        "logo": "img/MOSFiT.png",
        "language": "Python",
        "category": "Transients",
        "keywords": [
            "Transients",
            "Light Curves",
            "Supernovae",
            "Tidal Disruption Events"
        ],
        "description": "A package for fitting, sharing, and estimating the parameters of transients via user-contributed transient models.",
        "link": "https://mosfit.readthedocs.io/en/latest/#",
        "attribution_link": "https://github.com/guillochon/MOSFiT",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "emcee",
            "schwimmbad",
            "seaborn"
        ]
    },
    "Astrocut": {
        "tags": [
            "Curtis+2019:2019AJ....158...77C",
            "Brasseur+2019:2019ascl.soft05007B"
        ],
        "logo": "img/AstroCut.png",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "TESS",
            "lightcurve"
        ],
        "description": "Astrocut provides tools for making cutouts from sets of astronomical images with shared footprints.",
        "link": "https://ascl.net/code/v/2239",
        "attribution_link": "https://ascl.net/code/v/2239",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "scipy"
        ]
    },
    "eleanor": {
        "tags": [
            "Feinstein+2019:2019PASP..131i4502F"
        ],
        "logo": "img/eleanor.gif",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "TESS",
            "lightcurve"
        ],
        "description": "eleanor is a python package to extract target pixel files from TESS Full Frame Images and produce systematics-corrected light curves for any star observed by the TESS mission.",
        "link": "https://github.com/afeinstein20/eleanor",
        "attribution_link": "https://github.com/afeinstein20/eleanor",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "pandas",
            "astroquery",
            "Lightkurve",
            "Photutils",
            "tqdm"
        ]
    },
    "VISTA": {
        "tags": [
            "1988igbo.conf..443S"
        ],
        "logo": "",
        "language": "Fortran",
        "category": "Photometry",
        "keywords": [
            "old school",
            "photometric modeling",
            "photometric profiles"
        ],
        "description": "VISTA is an astronomical CCD data reduction and analysis software package",
        "link": "http://ganymede.nmsu.edu/holtz/xvista/help/man/index.html",
        "attribution_link": "http://ganymede.nmsu.edu/holtz/xvista/",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "elk": {
        "tags": [
            "Wainer_JOSS",
            "Wainer_AJ"
        ],
        "logo": "img/elk.png",
        "language": "Python",
        "category": "Stars",
        "keywords": [],
        "description": "This package allows you to download, correct, analyze and visualize integrated light curves from TESS FFI data.",
        "link": "https://elk.readthedocs.io/en/latest/",
        "attribution_link": "https://elk.readthedocs.io/en/latest/pages/cite.html",
        "zenodo_doi": "10.5281/zenodo.8393594",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "Lightkurve"
        ]
    },
    "Redback": {
        "tags": [
            "sarin_redback"
        ],
        "logo": "img/redback.png",
        "language": "Python",
        "category": "Transients",
        "keywords": [
            "inference",
            "transient"
        ],
        "description": "A package for simulating, modelling, and inference of all electromagnetic transients and multi-messenger inference.",
        "link": "https://redback.readthedocs.io/en/latest/",
        "attribution_link": "https://redback.readthedocs.io/en/latest/acknowledgements.html#general-citation-text",
        "zenodo_doi": "10.5281/zenodo.12735386",
        "custom_citation": "This work made use of \\textsc{Redback} \\citep{sarin_redback}.\\footnote{{TODO}: Please complete citation following instructions available at \\url{https://redback.readthedocs.io/en/latest/acknowledgements.html\\#general-citation-text}}.",
        "dependencies": [
            "numpy",
            "scipy"
        ]
    },
    "WebbPSF": {
        "tags": [
            "2012SPIE.8442E..3DP",
            "2014SPIE.9143E..3XP"
        ],
        "logo": "img/webbpsf.png",
        "language": "Python",
        "category": "Imaging",
        "keywords": [
            "JWST",
            "Roman",
            "PSF"
        ],
        "description": "WebbPSF computes simulated point spread functions (PSFs) for NASA's James Webb Space Telescope (JWST) and Nancy Grace Roman Space Telescope.",
        "link": "https://webbpsf.readthedocs.io/en/stable/index.html",
        "attribution_link": "https://webbpsf.readthedocs.io/en/stable/index.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "astroquery"
        ]
    },
    "Agama": {
        "tags": [
            "2019MNRAS.482.1525V"
        ],
        "logo": "img/agama.png",
        "logo_background": "true",
        "language": "C++",
        "category": "Galactic Dynamics",
        "keywords": [
            "galactic dynamics",
            "galpy",
            "gala"
        ],
        "description": "C++ package for galactic dynamics, with Python & Julia interfaces, plugins for NEMO & AMUSE, and interoperability with Gala & Galpy",
        "link": "https://github.com/GalacticDynamics-Oxford/Agama",
        "attribution_link": "https://github.com/GalacticDynamics-Oxford/Agama",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "iminuit": {
        "tags": [
            "iminuit",
            "James:1975dr"
        ],
        "logo": "https://scikit-hep.org/iminuit/_images/iminuit_logo.svg",
        "language": "Python",
        "category": "Statistics",
        "keywords": [
            "fitting"
        ],
        "description": "iminuit is a Jupyter-friendly Python interface for the Minuit2 C++ library maintained by CERN's ROOT team.",
        "link": "https://scikit-hep.org/iminuit/",
        "attribution_link": "https://scikit-hep.org/iminuit/citation.html",
        "zenodo_doi": "10.5281/zenodo.3949207",
        "custom_citation": "",
        "dependencies": [
            "numpy"
        ]
    },
    "ArviZ": {
        "tags": [
            "arviz_2019"
        ],
        "logo": "img/arviz.png",
        "language": "Python",
        "category": "Statistics",
        "keywords": [],
        "description": "ArviZ is a Python package for exploratory analysis of Bayesian models. It serves as a backend-agnostic tool for diagnosing and visualizing Bayesian inference.",
        "link": "https://python.arviz.org",
        "attribution_link": "https://www.arviz.org/en/latest/support.html#cite",
        "zenodo_doi": "10.5281/zenodo.2540944",
        "custom_citation": "",
        "dependencies": [
            "matplotlib",
            "numpy",
            "pandas",
            "python",
            "scipy",
            "xarray"
        ]
    },
    "PyTables": {
        "tags": [
            "pytables"
        ],
        "logo": "img/PyTables.png",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [],
        "description": "'A package for managing hierarchical datasets and designed to efficiently and easily cope with extremely large amounts of data.'",
        "link": "https://www.pytables.org/",
        "attribution_link": "https://www.pytables.org/FAQ.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy"
        ]
    },
    "SEVN": {
        "tags": [
            "2023MNRAS.524..426I",
            "2019MNRAS.485..889S",
            "2017MNRAS.470.4739S"
        ],
        "logo": "img/SEVN.png",
        "language": "C++",
        "category": "Population Synthesis",
        "keywords": [],
        "description": "SEVN (Stellar EVolution for N-body) is a rapid binary population synthesis code.",
        "link": "https://sevncodes.gitlab.io/sevn/index.html",
        "attribution_link": "https://sevncodes.gitlab.io/sevn/index.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "isochrones": {
        "tags": [
            "Morton+2015:2015ascl.soft03010M"
        ],
        "logo": "",
        "language": "Python",
        "category": "Photometry",
        "keywords": [
            "isochrones",
            "stellar models",
            "photometry"
        ],
        "description": "Isochrones provides simple interface for interacting with stellar model grids.",
        "link": "https://isochrones.readthedocs.io/en/latest/",
        "attribution_link": "https://github.com/timothydmorton/isochrones?tab=readme-ov-file#attribution",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "Numba",
            "PyTables",
            "pandas"
        ]
    },
    "dustmaps": {
        "tags": [
            "2018JOSS....3..695M"
        ],
        "logo": "",
        "language": "Python",
        "category": "Photometry",
        "keywords": [
            "dust",
            "extinction",
            "maps"
        ],
        "description": "dustmaps provides a unified interface for several 2D and 3D maps of interstellar dust reddening and extinction.",
        "link": "https://dustmaps.readthedocs.io/en/latest/",
        "attribution_link": "https://dustmaps.readthedocs.io/en/latest/",
        "zenodo_doi": "10.5281/zenodo.1299367",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "astropy",
            "h5py",
            "healpy"
        ]
    },
    "pynbody": {
        "tags": [
            "pynbody"
        ],
        "logo": "img/pynbody.svg",
        "language": "Python",
        "category": "N-body",
        "keywords": [],
        "description": "an analysis package for astrophysical N-body and Smooth Particle Hydrodynamics simulations",
        "link": "https://pynbody.readthedocs.io/latest/",
        "attribution_link": "https://pynbody.readthedocs.io/latest/#acknowledging-pynbody-in-scientific-publications",
        "zenodo_doi": "10.5281/zenodo.1297087",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "Cython"
        ]
    },
    "gaiaunlimited": {
        "tags": [
            "Castro-Ginard+2023:2023A&A...677A..37C",
            "Cantat-Gaudin+2023:2023A&A...669A..55C",
            "Boubert+2021:2021MNRAS.501.2954B",
            "Boubert+2020:2020MNRAS.497.4246B",
            "Everall+2022:2022MNRAS.509.6205E"
        ],
        "logo": "",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "Gaia",
            "selection function"
        ],
        "description": "gaiaunlimited is a package for querying and constructing selection functions for the Gaia survey. It is developed by the GaiaUnlimited collaboration.",
        "link": "https://gaiaunlimited.readthedocs.io/en/latest/",
        "attribution_link": "https://gaiaunlimited.readthedocs.io/en/latest/citation.html",
        "zenodo_doi": "",
        "custom_citation": "This work made use of the Gaia selection function tools from \\texttt{gaiaunlimited} \\citep{Castro-Ginard+2023:2023A&A...677A..37C, Cantat-Gaudin+2023:2023A&A...669A..55C, Boubert+2021:2021MNRAS.501.2954B, Boubert+2020:2020MNRAS.497.4246B, Everall+2022:2022MNRAS.509.6205E}\\footnote{TODO: Include the relevant subset of these citations following instructions here: \\url{https://gaiaunlimited.readthedocs.io/en/latest/citation.html}}.",
        "dependencies": [
            "numpy",
            "scipy",
            "astropy",
            "astroquery",
            "pandas",
            "healpy",
            "h5py",
            "tqdm"
        ]
    },
    "NetworkX": {
        "tags": [
            "networkx"
        ],
        "logo": "img/NetworkX.png",
        "logo_background": "true",
        "language": "Python",
        "category": "Computing",
        "keywords": [],
        "description": "NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.",
        "link": "https://networkx.org/",
        "attribution_link": "https://networkx.org/documentation/stable/#citing",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "GaiaAlertsPy": {
        "tags": [
            "Hodgkin+2021:2021A&A...652A..76H",
            "Tzanidakis+2023:2023ApJ...955...69T"
        ],
        "logo": "img/GaiaAlertsPy.png",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "Gaia"
        ],
        "description": "GaiaAlertsPy is a Python library for scraping the the Gaia Photometric Science Alerts.",
        "link": "https://gaiaalertspy-docs.readthedocs.io/en/latest/",
        "attribution_link": "https://gaiaalertspy-docs.readthedocs.io/en/latest/Cite.html",
        "zenodo_doi": "",
        "custom_citation": "This research made use of \\texttt{GaiaAlertsPy} \\citep{Hodgkin+2021:2021A&A...652A..76H, Tzanidakis+2023:2023ApJ...955...69T}. In addition, we acknowledge ESA Gaia, DPAC and the Photometric Science Alerts Team.",
        "dependencies": [
            "astropy",
            "numpy"
        ]
    },
    "Cobaya": {
        "tags": [
            "2021JCAP...05..057T",
            "2019ascl.soft10019T"
        ],
        "logo": "img/cobaya.webp",
        "logo_background": "true",
        "language": "Python",
        "category": "Statistics",
        "keywords": [],
        "description": "A general-purpose Bayesian analysis code aimed at models with complex internal interdependencies.",
        "link": "https://cobaya.readthedocs.io/en/latest/",
        "attribution_link": "https://cobaya.readthedocs.io/en/latest/",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "matplotlib",
            "pandas",
            "python",
            "scipy",
            "Cython"
        ]
    },
    "xarray": {
        "tags": [
            "hoyer2017xarray"
        ],
        "logo": "img/xarray.png",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "xarray"
        ],
        "description": "N-D labeled Arrays and Datasets in Python",
        "link": "https://docs.xarray.dev/en/latest",
        "attribution_link": "https://docs.xarray.dev/en/latest/getting-started-guide/faq.html#how-should-i-cite-xarray",
        "zenodo_doi": "10.5281/zenodo.598201",
        "custom_citation": "",
        "dependencies": ["numpy", "pandas"]
    },
    "NMMA": {
        "tags": [
            "Pang:2022rzc",
            "2024ascl.soft02001P"
        ],
        "logo": "img/NMMA.svg",
        "language": "Python",
        "category": "Parameter Estimation",
        "keywords": [
            "multimessenger",
            "multi-messenger",
            "Bayesian Inference",
            "Parameter Estimation"
        ],
        "description": "nmma is a fully featured, Bayesian multi-messenger pipeline targeting joint analyses of gravitational-wave and electromagnetic data with additional non-astrophysical inputs.",
        "link": "https://nuclear-multimessenger-astronomy.github.io/nmma/",
        "attribution_link": "https://github.com/nuclear-multimessenger-astronomy/nmma?tab=readme-ov-file#citing-nmma",
        "zenodo_doi": "10.5281/zenodo.6551052",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "Jupyter",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "ArviZ",
            "Bilby",
            "corner.py"
        ]
    },
    "Galpynamics": {
        "tags": [
            "amsdottorato8449",
            "2019A&A...622A..64B"
        ],
        "logo": "img/Galpynamics.png",
        "language": "Python",
        "category": "Galactic Dynamics",
        "keywords": [],
        "description": "Python module to estimate the potential of spheroidal and disc galactic components.\nIt includes methods to self-consistely estimate the scale height of discs.",
        "link": "https://gitlab.com/iogiul/galpynamics",
        "attribution_link": "https://gitlab.com/iogiul/galpynamics",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "python"
        ]
    },
    "tglc": {
        "tags": [
            "2023AJ....165...71H"
        ],
        "logo": "img/tglc.jpg",
        "language": "Python",
        "category": "Photometry",
        "keywords": [
            "TESS",
            "Light Curve",
            "FFI light curve"
        ],
        "description": "TESS-Gaia Light Curve",
        "link": "https://github.com/TeHanHunter/TESS_Gaia_Light_Curve",
        "attribution_link": "https://archive.stsci.edu/hlsp/tglc",
        "zenodo_doi": "10.5281/zenodo.7023845",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "Astrocut",
            "astroquery",
            "Numba",
            "tqdm"
        ]
    },
    "Simframe": {
        "tags": [
            "2022JOSS....7.3882S"
        ],
        "logo": "",
        "language": "Python",
        "category": "Simulations",
        "keywords": [],
        "description": "Python framework for scientific simulations.",
        "link": "https://simframe.readthedocs.io/",
        "attribution_link": "https://simframe.readthedocs.io/en/latest/A_citation.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "h5py"
        ]
    },
    "yt": {
        "tags": [
            "2011ApJS..192....9T"
        ],
        "logo": "img/yt.svg",
        "language": "Python",
        "category": "Visualisation",
        "keywords": [
            "visualization",
            "python",
            "data",
            "analysis",
            "astronomy",
            "data-visualization",
            "geophysics",
            "scientific-visualization",
            "scientific-computing",
            "astrophysics",
            "finite-element-analysis",
            "nuclear-engineering"
        ],
        "description": "yt is a community-developed analysis and visualization toolkit for volumetric data.",
        "link": "https://yt-project.org/doc/",
        "attribution_link": "https://yt-project.org/doc/faq/index.html#how-do-i-cite-yt",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "matplotlib",
            "numpy",
            "python",
            "tqdm"
        ]
    },
    "naima": {
        "tags": [
            "naima"
        ],
        "logo": "",
        "language": "Python",
        "category": "Gamma-ray Astrophysics",
        "keywords": [
            "mcmc",
            "gamma-ray",
            "spectral analysis",
            "spectral fitting",
            "high-energy astrophysics"
        ],
        "description": "Python package for computation of non-thermal radiation from relativistic particle populations and MCMC fitting to observed spectra",
        "link": "https://naima.readthedocs.io",
        "attribution_link": "https://naima.readthedocs.io/en/latest/#license-attribution",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "corner.py",
            "emcee"
        ]
    },
    "GetDist": {
        "tags": [
            "Lewis:2019xzd"
        ],
        "logo": "",
        "language": "Python",
        "category": "Parameter Estimation",
        "keywords": [],
        "description": "GetDist is a Python package for analysing and plotting Monte Carlo (or other) samples.",
        "link": "https://getdist.readthedocs.io/en/latest/index.html",
        "attribution_link": "https://getdist.readthedocs.io/en/latest/intro.html",
        "zenodo_doi": "10.5281/zenodo.594378",
        "custom_citation": "",
        "dependencies": [
            "matplotlib",
            "python",
            "scipy"
        ]
    },
    "plotly": {
        "tags": [
            "plotly"
        ],
        "logo": "img/plotly.png",
        "language": "Python",
        "category": "Visualisation",
        "keywords": [
            "data visualization",
            "plotting"
        ],
        "description": "A open-source interactive plotting library.",
        "link": "https://plotly.com/python/",
        "attribution_link": "https://plotly.com/chart-studio-help/citations/",
        "zenodo_doi": "10.5281/zenodo.14366348",
        "custom_citation": "",
        "dependencies": []
    },
    "dust_extinction": {
        "tags": [
            "Gordon+2024:2024JOSS....9.7023G"
        ],
        "logo": "img/dust_extinction.png",
        "language": "Python",
        "category": "Interstellar Medium",
        "keywords": [
            "dust",
            "extinction",
            "extinction curves"
        ],
        "description": "A Python package that provides over 30 models of dust extinction curves.",
        "link": "https://dust-extinction.readthedocs.io/en/latest/",
        "attribution_link": "https://dust-extinction.readthedocs.io/en/latest/dust_extinction/references.html",
        "zenodo_doi": "10.5281/zenodo.4658887",
        "custom_citation": "This research made use of the dust extinction models provided by \\texttt{dust\\_extinction} \\citep{Gordon+2024:2024JOSS....9.7023G}. \\footnote{TODO: Include the relevant subset of these citations following instructions here: \\url{https://dust-extinction.readthedocs.io/en/latest/dust_extinction/references.html}}. ",
        "dependencies": [
            "astropy",
            "scipy"
        ]
    },
    "FLASH": {
        "tags": [
            "2000ApJS..131..273F",
            "DBLP:journals/corr/abs-0903-4875"
        ],
        "logo": "img/FLASH.jpg",
        "language": "Fortran",
        "category": "Simulations",
        "keywords": [
            "multiphysics",
            "simulation",
            "fortran"
        ],
        "description": "A composable, multipurpose, multiphysics simulation framework.",
        "link": "https://flash.rochester.edu/site/index.shtml",
        "attribution_link": "https://ascl.net/1010.082",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "python"
        ]
    },
    "SNEC": {
        "tags": [
            "2015ApJ...814...63M"
        ],
        "logo": "",
        "language": "Fortran",
        "category": "Transients",
        "keywords": [
            "supernova",
            "light curve"
        ],
        "description": "SuperNova Explosion Code - light curve calculations",
        "link": "https://stellarcollapse.org/index.php/SNEC.html",
        "attribution_link": "https://stellarcollapse.org/index.php/SNEC.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "TOPCAT": {
        "tags": [
            "2005ASPC..347...29T"
        ],
        "logo": "img/TOPCAT.png",
        "language": "Java",
        "category": "Data Handling",
        "keywords": [],
        "description": "Tool for OPerations on Catalogues And Tables (TOPCAT) is an interactive graphical viewer and editor for tabular data.",
        "link": "http://www.starlink.ac.uk/topcat/",
        "attribution_link": "https://www.star.bris.ac.uk/~mbt/topcat/sun253/ack.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "cogsworth": {
        "tags": [
            "cogsworth:joss",
            "cogsworth:apjs"
        ],
        "logo": "img/cogsworth.png",
        "language": "Python",
        "category": "Population Synthesis",
        "keywords": [
            "population synthesis",
            "stellar evolution",
            "binary stars",
            "galactic dynamics"
        ],
        "description": "A Python package for self-consistent binary population synthesis and galactic dynamics simulations.",
        "link": "https://cogsworth.readthedocs.io/en/latest/",
        "attribution_link": "https://cogsworth.readthedocs.io/en/latest/cite.html",
        "zenodo_doi": "10.5281/zenodo.13368096",
        "custom_citation": "This research made use of \\texttt{cogsworth} and its dependencies \\citep{cogsworth:joss,cogsworth:apjs}\\footnote{TODO: Run \\texttt{.get\\_citations()} on your finished \\texttt{Population} to get the full list of citations that apply to your simulation.}.",
        "dependencies": [
            "numpy",
            "scipy",
            "astropy",
            "matplotlib",
            "python",
            "COSMIC",
            "gala"
        ]
    },
    "Quokka": {
        "tags": [
            "Quokka"
        ],
        "logo": "https://avatars.githubusercontent.com/u/118950435?s=200&v=4",
        "language": "C++",
        "category": "Simulations",
        "keywords": ["AMR", "GPU", "CUDA", "ROCm", "hydrodynamics"],
        "description": "Two-moment AMR radiation hydrodynamics (with self-gravity, particles, and chemistry) on CPUs/GPUs for astrophysics",
        "link": "https://github.com/quokka-astro/quokka",
        "attribution_link": "https://quokka-astro.github.io/quokka/citation/",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "BibQuest": {
        "tags": [
        ],
        "logo": "img/bibquest.png",
        "language": "Python",
        "category": "Manuscript Preparation",
        "keywords": [
            "bibtex",
            "biblatex",
            "latex",
            "astronomy",
            "research"
        ],
        "description": "Automagically fill your bib file just using bib keys",
        "link": "https://github.com/sahiljhawar/BibQuest",
        "attribution_link": "https://github.com/sahiljhawar/BibQuest",
        "zenodo_doi": "10.5281/zenodo.15512122",
        "custom_citation": "",
        "dependencies": [
            "python"
        ]
    },
    "veeper": {
        "tags": [],
        "logo": "",
        "language": "Python",
        "category": "Interstellar Medium",
        "keywords": [],
        "description": "Tools for generating and fitting Voigt profiles of absorption lines.",
        "link": "https://github.com/jnburchett/veeper/",
        "attribution_link": "https://github.com/jnburchett/veeper/tree/master/docs",
        "zenodo_doi": "10.5281/zenodo.10993983",
        "custom_citation": "This research made use of \\texttt{the Veeper}.",
        "dependencies": []
    },
    "Turing.jl": {
        "tags": [
            "ge2018t"
        ],
        "logo": "img/turingjl.png",
        "language": "Julia",
        "category": "Parameter Estimation",
        "keywords": [
            "probabilistic modeling",
            "bayesian inference",
            "mcmc",
            "sampling"
        ],
        "description": "A probabilistic modeling language built on Julia.",
        "link": "https://turinglang.org/docs/",
        "attribution_link": "https://github.com/TuringLang/Turing.jl/blob/main/CITATION.bib",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": ["julia"]
    },
    "STAN": {
        "tags": [],
        "logo": "img/STAN.png",
        "language": "STAN",
        "category": "Statistics",
        "keywords": [
            "Statistics",
            "Bayesian Inference",
            "multi-language",
            "C++",
            "python",
            "R",
            "Julia"
        ],
        "description": "Software Toolkit for Bayesian Data Analysis",
        "link": "https://mc-stan.org/docs/",
        "attribution_link": "https://mc-stan.org/about/#how-to-cite-stan",
        "zenodo_doi": "",
        "custom_citation": "This work made use of \\texttt{STAN}.\\footnote{TODO: Follow STAN instructions to construct citation \\url{https://mc-stan.org/about/\\#how-to-cite-stan}.}",
        "dependencies": []
    },
    "pion": {
        "tags": [
            "2021MNRAS.504..983M"
        ],
        "logo": "img/pion.png",
        "language": "C++",
        "category": "Computational Fluid Dynamics",
        "keywords": [
            "hydrodynamics",
            "magnetohydrodynamics",
            "photoionisation",
            "stellar winds",
            "shockwaves"
        ],
        "description": "PION is a grid-based fluid dynamics code for hydrodynamics and magnetohydrodynamics, including a ray-tracing module for calculating the attenuation of radiation from point sources.",
        "link": "https://www.pion.ie/docs/",
        "attribution_link": "https://git.dias.ie/massive-stars-software/pion/-/blob/master/CITATION.txt",
        "zenodo_doi": "",
        "custom_citation": "Computations for this work used the \\texttt{PION} simulation code, publicly available at \\url{https://www.pion.ie/} and developed with support from research funding by the Irish Research Council, Science Foundation Ireland, The Deutsch Forschungsgemeinschaft and the Alexander von Humboldt Stiftung.",
        "dependencies": []
    },
    "3D-BAROLO": {
        "tags": [
            "DiTeodoro+2015"
        ],
        "logo": "img/bbarolo.jpg",
        "language": "C++",
        "category": "Galactic Dynamics",
        "keywords": [],
        "description": "A software to derive the kinematics of disk galaxies through 3D tilted-ring models.",
        "link": "https://bbarolo.readthedocs.io/en/latest/",
        "attribution_link": "https://bbarolo.readthedocs.io/en/latest/license.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "reLAISS": {
        "tags": [
            "Reynolds_2025"
        ],
        "logo": "img/reLAISS.png",
        "language": "Python",
        "category": "Transients",
        "keywords": [
            "similarity search",
            "anomaly detection",
            "light curve",
            "time-series",
            "photometry"
        ],
        "description": "A library for similarity searches of supernova light curves and host galaxies.",
        "link": "https://github.com/VTDA-Group/re-laiss/tree/main/src/relaiss",
        "attribution_link": "https://github.com/VTDA-Group/re-laiss?tab=readme-ov-file#citation",
        "zenodo_doi": "10.5281/zenodo.15397885",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "pandas",
            "python"
        ]
    },
    "Pröst": {
        "tags": [],
        "logo": "img/prost.png",
        "language": "Python",
        "category": "Transients",
        "keywords": [
            "host galaxy association"
        ],
        "description": "A Bayesian code for transient-host galaxy association.",
        "link": "https://github.com/alexandergagliano/Prost",
        "attribution_link": "https://github.com/alexandergagliano/Prost",
        "zenodo_doi": "10.5281/zenodo.15397885",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "numpy",
            "pandas",
            "python",
            "scipy"
        ]
    },
    "LALSuite": {
        "tags": [
            "lalsuite",
            "swiglal"
        ],
        "logo": "img/LALSuite.png",
        "language": ["C", "Python"],
        "category": "Gravitational Waves",
        "keywords": [
            "gravitational wave",
            "data analysis",
            "waveform",
            "burst",
            "CBC",
            "compact binary coalescence",
            "binary black hole",
            "binary neutron star",
            "CW",
            "continuous wave"
        ],
        "description": "The LVK Algorithm Library Suite (LALSuite) is comprised of various gravitational wave data analysis routines, including: waveform and noise generation; burst, CBC, and CW signal analysis.",
        "link": "https://doi.org/10.7935/GT1W-FZ16",
        "attribution_link": "https://git.ligo.org/lscsoft/lalsuite/#acknowledgment",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "matplotlib",
            "numpy",
            "python",
            "scipy",
            "h5py",
            "healpy",
            "sympy",
            "tqdm"
        ]
    },
    "qnm": {
        "tags": [
            "Stein:2019mop"
        ],
        "logo": "",
        "language": "Python",
        "category": "Gravitational Waves",
        "keywords": [],
        "description": "A Python package for calculating Kerr quasinormal modes, separation constants, and spherical-spheroidal mixing coefficients",
        "link": "https://qnm.readthedocs.io/",
        "attribution_link": "https://github.com/duetosymmetry/qnm?tab=readme-ov-file#how-to-cite",
        "zenodo_doi": "10.5281/zenodo.2593978",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "python",
            "scipy",
            "Numba",
            "tqdm"
        ]
    },
    "jwst": {
        "tags": [],
        "logo": "img/jwst.png",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [],
        "description": "The STScI science calibration pipeline for data from the James Webb Space Telescope",
        "link": "https://jwst-pipeline.readthedocs.io/en/latest/",
        "attribution_link": "https://jwst-docs.stsci.edu/accessing-jwst-data/citing-jwst-data",
        "zenodo_doi": "10.5281/zenodo.6984365",
        "custom_citation": "",
        "dependencies": [
            "astropy",
            "numpy",
            "python",
            "scipy",
            "Photutils"
        ]
    },
    "PyFstat": {
        "tags": [
            "pyfstat",
            "Keitel:2021xeq",
            "Ashton:2018ure",
            "Keitel:2018pxz",
            "Ashton:2018qth"
        ],
        "logo": "img/PyFstat.png",
        "language": "Python",
        "category": "Gravitational Waves",
        "keywords": [
            "astrophysics",
            "data analysis",
            "gravity",
            "gravitational waves",
            "neutron stars",
            "ligo",
            "virgo",
            "pycuda"
        ],
        "description": "A python package for gravitational wave analysis with the F-statistic",
        "link": "https://pyfstat.readthedocs.io/",
        "attribution_link": "https://github.com/PyFstat/PyFstat/blob/master/README.md#citing-this-work",
        "zenodo_doi": "10.5281/zenodo.3967045",
        "custom_citation": "This paper made use of the \\textsc{PyFstat} package \\citep{pyfstat,Keitel:2021xeq,Ashton:2018ure} \\footnote{{TODO}: Optionally, if using transient signal features please also cite \\citet{Keitel:2018pxz} and for glitch-robust searches please also cite \\citet{Ashton:2018qth} . See \\url{https://github.com/PyFstat/PyFstat/blob/master/README.md#citing-this-work} for details.}",
        "dependencies": [
            "matplotlib",
            "numpy",
            "pandas",
            "python",
            "scipy",
            "corner.py",
            "LALSuite",
            "tqdm"
        ]
    },
    "Cloudy": {
        "tags": [
            "1998PASP..110..761F",
            "2013RMxAA..49..137F",
            "2017RMxAA..53..385F",
            "2023RMxAA..59..327C",
            "2025arXiv250801102G"
        ],
        "logo": "img/cloudy.jpg",
        "language": "C++",
        "category": "General",
        "keywords": [],
        "description": "Cloudy is an ab initio spectral synthesis code designed to model a wide range of interstellar \"clouds\", from H II regions and planetary nebulae, to Active Galactic Nuclei.",
        "link": "https://gitlab.nublado.org/cloudy/cloudy",
        "attribution_link": "https://gitlab.nublado.org/cloudy/cloudy/-/wikis/Frequently%20asked%20Questions%20about%20Cloudy",
        "zenodo_doi": "",
        "custom_citation": "Calculations were performed with version yy.vr of Cloudy \\citep{1998PASP..110..761F, 2013RMxAA..49..137F, 2017RMxAA..53..385F, 2023RMxAA..59..327C}, last described by \\citep{2025arXiv250801102G}. \\footnote{TODO: Replace yy.vr with the version number used.}",
        "dependencies": []
    },
    "POSYDON": {
        "tags": [
            "2024arXiv241102376A",
            "2023ApJS..264...45F"
        ],
        "logo": "img/posydon.png",
        "language": "Python",
        "category": "Population Synthesis",
        "keywords": [],
        "description": "POSYDON is a next-generation single and binary-star population synthesis code incorporating full stellar structure and evolution modeling with the use of MESA.",
        "link": "https://posydon.org",
        "attribution_link": "https://posydon.org",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "numpy",
            "scipy",
            "astropy",
            "pandas",
            "matplotlib",
            "MESA"
        ]
    },
    "MIST": {
        "tags": [
            "2016ApJ...823..102C",
            "2016ApJS..222....8D"
        ],
        "logo": "img/MIST.jpg",
        "language": "Fortran",
        "category": "Stars",
        "keywords": [],
        "description": "Isochrone tool based on MESA with a large grids of single-star stellar evolutionary models extending across all evolutionary phases for all relevant masses & metallicities",
        "link": "https://waps.cfa.harvard.edu/MIST/index.html",
        "attribution_link": "https://waps.cfa.harvard.edu/MIST/references.html",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "MESA"
        ]
    },
    "Magrathea": {
        "tags": [
            "Huang2022"
        ],
        "logo": "img/Magrathea.jpg",
        "language": "C++",
        "category": "Planet and Exoplanet",
        "keywords": [],
        "description": "A planet structure code which considers the case of fully differentiated interiors.",
        "link": "https://github.com/Huang-CL/Magrathea",
        "attribution_link": "https://github.com/Huang-CL/Magrathea/blob/master/CITATION.md",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": []
    },
    "Makie.jl": {
        "tags": [
            "DanischKrumbiegel2021"
        ],
        "logo": "img/Makie.jl.svg",
        "language": "Julia",
        "category": "Data Handling",
        "keywords": [],
        "description": "A plotting library for Julia that is both reactive and useful for making publication-quality plots.",
        "link": "https://docs.makie.org/stable/",
        "attribution_link": "https://docs.makie.org/stable/#Citing-Makie",
        "zenodo_doi": "",
        "custom_citation": "",
        "dependencies": [
            "julia"
        ]
    }
}
