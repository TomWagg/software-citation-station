{
    "python": {
        "tags": ["python"],
        "logo": "img/python.png",
        "language": "python",
        "category": "general",
        "keywords": [],
        "description": "A high-level, general-purpose interpreted programming language.",
        "link": "https://docs.python.org/3/",
        "zenodo_doi": "",
        "attribution_link": "http://citebay.com/how-to-cite/python/",
        "custom_citation": ""
    },
    "numpy": {
        "tags": ["numpy"],
        "logo": "img/numpy.svg",
        "logo_background": true,
        "language": "python",
        "category": "general",
        "keywords": [],
        "description": "The fundamental package for scientific computing with Python",
        "link": "https://numpy.org/doc/stable/",
        "zenodo_doi": "",
        "attribution_link": "https://numpy.org/citing-numpy/",
        "custom_citation": ""
    },
    "matplotlib": {
        "tags": ["Hunter:2007"],
        "logo": "img/matplotlib.webp",
        "language": "python",
        "category": "visualisation",
        "keywords": ["plotting", "figures", "graphs"],
        "description": "Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python. Matplotlib makes easy things easy and hard things possible.",
        "link": "https://matplotlib.org/",
        "zenodo_doi": "",
        "attribution_link": "https://matplotlib.org/stable/users/project/citing.html",
        "custom_citation": ""
    },
    "astropy": {
        "tags": ["astropy:2013", "astropy:2018", "astropy:2022"],
        "logo": "img/astropy.png",
        "language": "python",
        "category": "general",
        "keywords": ["astronomy", "astrophysics"],
        "description": "The astropy package contains key functionality and common tools needed for performing astronomy and astrophysics with Python.",
        "link": "https://docs.astropy.org/en/stable/",
        "zenodo_doi": "",
        "attribution_link": "https://www.astropy.org/acknowledging.html",
        "custom_citation": ""
    },
    "scipy": {
        "tags": ["2020SciPy-NMeth"],
        "logo": "img/scipy.svg",
        "language": "python",
        "category": "general",
        "keywords": [],
        "description": "Fundamental algorithms for scientific computing in Python",
        "link": "https://docs.scipy.org/doc/scipy/reference/",
        "zenodo_doi": "10.5281/zenodo.595738",
        "attribution_link": "https://scipy.org/citing-scipy/",
        "custom_citation": ""
    },
    "pandas": {
        "tags": ["mckinney-proc-scipy-2010"],
        "logo": "img/pandas.svg",
        "language": "python",
        "category": "Data Handling",
        "keywords": ["dataframes", "data manipulation"],
        "description": "pandas is an open source, BSD-licensed library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language.",
        "link": "https://pandas.pydata.org/docs/",
        "zenodo_doi": "10.5281/zenodo.3509134",
        "attribution_link": "https://pandas.pydata.org/about/citing.html",
        "custom_citation": ""
    },
    "seaborn": {
        "tags": ["Waskom2021"],
        "logo": "img/seaborn.svg",
        "language": "python",
        "category": "visualisation",
        "keywords": ["plotting", "figures", "graphs"],
        "description": "Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.",
        "link": "https://seaborn.pydata.org/",
        "zenodo_doi": "",
        "attribution_link": "https://seaborn.pydata.org/citing.html",
        "custom_citation": ""
    },
    "ADS":{
        "tags": [],
        "logo": "https://ui.adsabs.harvard.edu/help/img/bbb_assets/ads_partial_logo_dark_background.svg",
        "language": "java",
        "category": "library",
        "keywords": ["library", "references", "papers"],
        "description": "The SAO/NASA Astrophysics Data System (ADS) is a digital library portal for researchers in astronomy and physics, operated by the Smithsonian Astrophysical Observatory (SAO) under a NASA grant.",
        "link": "https://ui.adsabs.harvard.edu/about/",
        "zenodo_doi": "",
        "attribution_link": "https://ui.adsabs.harvard.edu/about/",
        "custom_citation": "This research has made use of NASA's Astrophysics Data System."
    },
    "legwork": {
        "tags": ["LEGWORK_apjs", "LEGWORK_joss"],
        "logo": "img/legwork.png",
        "language": "python",
        "category": "gravitational waves",
        "keywords": ["LISA", "double compact objects", "inspiral"],
        "description": "LEGWORK (LISA Evolution and Gravitational Wave ORbit Kit) is a python package designed to calculate signal-to-noise ratios for GWs emitted from inspiraling binary systems that are potentially observable by LISA.",
        "link": "https://legwork.readthedocs.io/en/stable/",
        "zenodo_doi": "10.5281/zenodo.5821187",
        "attribution_link": "https://legwork.readthedocs.io/en/stable/cite.html",
        "custom_citation": ""
    },
    "MESA": {
        "tags": ["Paxton2011", "Paxton2013", "Paxton2015", "Paxton2018", "Paxton2019", "Jermyn2023",
                 "Rogers2002", "Saumon1995", "Irwin2004", "Timmes2000", "Potekhin2010", "Jermyn2021",
                 "Iglesias1993", "Iglesias1996", "Ferguson2005", "Poutanen2017", "Cassisi2007", "Blouin2020",
                 "Cyburt2010", "Angulo1999", "Fuller1985", "Oda1994", "Langanke2000", "Chugunov2007",
                 "Itoh1996", "Eggleton1983", "Ritter1988"],
        "logo": "img/mesa.png",
        "language": "fortran",
        "category": "stars",
        "keywords": ["stellar evolution", "stellar structure", "stellar astrophysics"],
        "description": "Modules for Experiments in Stellar Astrophysics (MESA) is an open-source 1D stellar evolution code.",
        "link": "http://mesa.sourceforge.net/",
        "zenodo_doi": "",
        "attribution_link": "http://mesa.sourceforge.net/citing.html",
        "custom_citation": "This work uses Modules for Experiments in Stellar Astrophysics \\citep[MESA][]{Paxton2011, Paxton2013, Paxton2015, Paxton2018, Paxton2019, Jermyn2023}. The MESA EOS is a blend of the OPAL \\citep{Rogers2002}, SCVH \\citep{Saumon1995}, FreeEOS \\citep{Irwin2004}, HELM \\citep{Timmes2000}, PC \\citep{Potekhin2010}, and Skye \\citep{Jermyn2021} EOSes. Radiative opacities are primarily from OPAL \\citep{Iglesias1993, Iglesias1996}, with low-temperature data from \\citet{Ferguson2005} and the high-temperature, Compton-scattering dominated regime by \\citet{Poutanen2017}.  Electron conduction opacities are from \\citet{Cassisi2007} and \\citet{Blouin2020}. Nuclear reaction rates are from JINA REACLIB \\citep{Cyburt2010}, NACRE \\citep{Angulo1999} and additional tabulated weak reaction rates \\citet{Fuller1985, Oda1994, Langanke2000}.  Screening is included via the prescription of \\citet{Chugunov2007}. Thermal neutrino loss rates are from \\citet{Itoh1996}. Roche lobe radii in binary systems are computed using the fit of \\citet{Eggleton1983}.  Mass transfer rates in Roche lobe overflowing binary systems are determined following the prescription of \\citet{Ritter1988}.\\footnote{Note this is only valid for the default settings of MESA, adjust as necessary for custom settings used.}"
    },
    "gyre": {
        "tags": ["Townsend+2013", "Townsend+2018", "Goldstein+2020", "Sun+2023"],
        "logo": "img/gyre.webp",
        "language": "python",
        "category": "stars",
        "keywords": ["asteroseismology", "stellar oscillations", "stellar pulsations"],
        "description": "GYRE is a stellar oscillation code. Given an input stellar model, GYRE calculates the eigenfrequencies and eigenfunctions for the normal oscillation modes of the model.",
        "link": "https://gyre.readthedocs.io/en/stable/",
        "zenodo_doi": "",
        "attribution_link": "https://gyre.readthedocs.io/en/stable/user-guide/preliminaries.html#citing-gyre",
        "custom_citation": ""
    },
    "COMPAS": {
        "tags": ["COMPAS", "Barrett2018", "Broekgaarden2019", "Neijssel2019", "Stevenson2019", "Chattopadhyay2020", "Riley2021"],
        "logo": "img/COMPAS.png",
        "language": "c++",
        "category": "population synthesis",
        "keywords": ["population synthesis", "binary stars", "double compact objects", "gravitational waves"],
        "description": "Compact Object Mergers: Population Astrophysics and Statistics (COMPAS) combines tools for statistical analysis and model selection with rapid population synthesis, allowing inferences to be made about the details of stellar and binary evolution.",
        "link": "https://compas.science/docs",
        "zenodo_doi": "",
        "attribution_link": "https://compas.readthedocs.io/en/latest/pages/how-to-cite.html",
        "custom_citation": "Simulations in this paper made use of the COMPAS rapid binary population synthesis code (version X.Y.Z\\footnote{TODO: Update version number}), which is freely available at \\url{http://github.com/TeamCOMPAS/COMPAS} \\citep{COMPAS}. Model of gravitational wave selection effects based on \\citet{Barrett2018}. The STROOPWAFEL adaptive importance sampling algorithm is from \\citet{Broekgaarden2019}. Integration over cosmic star formation history outlined in \\citep{Neijssel2019}. COMPAS' model of (pulsational) pair instability supernova is from \\citet{Stevenson2019}. Pulsar spin and magnetic field evolution is from \\citet{Chattopadhyay2020}. Model of chemically homogeneous evolution is from \\citet{Riley2021}.",
        "extra_bibtex": "@PREAMBLE{{\\providecommand{\\noopsort}[1]{}}}"
    },
    "COSMIC": {
        "tags": ["Breivik2020"],
        "logo": "img/cosmic.png",
        "language": "python",
        "category": "population synthesis",
        "keywords": ["population synthesis", "binary stars", "double compact objects", "gravitational waves"],
        "description": "COSMIC (Compact Object Synthesis and Monte Carlo Investigation Code) is a rapid binary population synthesis suite with a special focus of generating compact binary populations.",
        "link": "https://cosmic-popsynth.github.io/docs/",
        "zenodo_doi": "10.5281/zenodo.3382152",
        "attribution_link": "https://github.com/COSMIC-PopSynth/COSMIC/blob/develop/README.md",
        "custom_citation": ""
    },
    "gala": {
        "tags": ["gala_JOSS"],
        "logo": "img/gala.png",
        "language": "python",
        "category": "galactic dynamics",
        "keywords": ["dynamics", "galaxy", "potential"],
        "description": "gala is an Astropy-affiliated Python package that aims to provide efficient tools for performing common tasks needed in Galactic Dynamics research.",
        "link": "http://gala.adrian.pw/",
        "zenodo_doi": "10.5281/zenodo.593786",
        "attribution_link": "http://gala.adrian.pw/en/latest/index.html",
        "custom_citation": ""
    },
    "showyourwork": {
        "tags": ["Luger2021"],
        "logo": "img/showyourwork.png",
        "language": "latex",
        "category": "Manuscript preparation",
        "keywords": ["latex", "paper with code", "workflow management"],
        "description": "Showyourwork! is a workflow management tool for open source scientific articles.",
        "link": "https://show-your.work/en/latest/",
        "zenodo_doi": "",
        "attribution_link": "https://show-your.work/en/latest/attribution/",
        "custom_citation": ""
    },
    "emcee": {
        "tags": ["emcee-Foreman-Mackey-2013"],
        "logo": "img/emcee.png",
        "language": "python",
        "category": "statistics",
        "keywords": ["MCMC", "statistics", "sampling", "markov chain"],
        "description": "emcee is a stable, well tested Python implementation of the affine-invariant ensemble sampler for Markov chain Monte Carlo (MCMC) proposed by Goodman & Weare (2010).",
        "link": "https://emcee.readthedocs.io/",
        "zenodo_doi": "10.5281/zenodo.1297476",
        "attribution_link": "https://github.com/dfm/emcee",
        "custom_citation": ""
    },
    "corner.py": {
        "tags": ["corner-Foreman-Mackey-2016"],
        "logo": "img/corner.png",
        "language": "python",
        "category": "statistics",
        "keywords": ["corner", "statistics", "plotting", "histogram"],
        "description": "corner.py is a Python module that uses matplotlib to visualize multidimensional samples using a scatterplot matrix.",
        "link": "https://corner.readthedocs.io/en/latest/",
        "zenodo_doi": "10.5281/zenodo.591491",
        "attribution_link": "https://corner.readthedocs.io/en/latest/#attribution",
        "custom_citation": ""
    },
    "astroBlend": {
        "tags": ["AstroBlend:2016"],
        "logo": "img/AstroBlend.png",
        "language": "python",
        "category": "visualisation",
        "keywords": ["blender", "visualization", "plotting", "yt"],
        "description": " Combine artistic 3D models with computational astrophysics datasets and win the internet.",
        "link": "https://www.astroblend.com/getstarted.html",
        "zenodo_doi": "",
        "attribution_link": "",
        "custom_citation": ""
    },
    "IPython/Jupyter": {
        "tags": ["2007CSE.....9c..21P", "kluyver2016jupyter"],
        "logo": "img/jupyter.png",
        "language": "python",
        "category": "general",
        "keywords": ["jupyter", "notebook", "plotting", "coding"],
        "description": "Free software, open standards, and web services for interactive computing across all programming languages",
        "link": "https://jupyter.org/",
        "zenodo_doi": "",
        "attribution_link": "",
        "custom_citation": ""
    },
    "h5py": {
        "tags": ["collette_python_hdf5_2014"],
        "logo": "img/HDF5.png",
        "language": "python",
        "category": "Data Handling",
        "keywords": ["Data Handling", "data analysis", "plotting", "coding"],
        "description": "The h5py package is a Pythonic interface to the HDF5 binary data format.",
        "link": "https://docs.h5py.org/en/stable/",
        "zenodo_doi": "10.5281/zenodo.594310",
        "attribution_link": "https://docs.h5py.org/en/stable/licenses.html",
        "custom_citation": ""
    },
    "ChaNGa": {
        "tags": ["Jetley2008", "Jetley2010", "Menon2015"],
        "logo": "",
        "language": "c++",
        "category": "n-body",
        "keywords": ["n-body", "galaxy formation", "galaxy evolution"],
        "description": "ChaNGa (Charm N-body GrAvity solver) is a code to perform collisionless N-body simulations.",
        "link": "https://github.com/N-BodyShop/changa/wiki",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/N-BodyShop/changa",
        "custom_citation": ""
    },
    "FIRE-2": {
        "tags": ["Wetzel2023", "Hopkins2015", "Hopkins2018a"],
        "logo": "img/FIRE.png",
        "language": "C",
        "category": "n-body",
        "keywords": ["n-body", "galaxy formation", "galaxy evolution", "feedback"],
        "description": "The FIRE: Feedback In Realistic Environments project seeks to develop and explore cosmological simulations of galaxy formation that directly resolve the interstellar medium of individual galaxies while capturing their cosmological environment.",
        "link": "http://flathub.flatironinstitute.org/fire",
        "zenodo_doi": "",
        "attribution_link": "http://flathub.flatironinstitute.org/fire",
        "custom_citation": "We use simulations from the FIRE-2 public data release \\citep{Wetzel2023}. The FIRE-2 cosmological zoom-in simulations of galaxy formation are part of the Feedback In Realistic Environments (FIRE) project, generated using the Gizmo code \\citep{Hopkins2015} and the FIRE-2 physics model \\citep{Hopkins2018a}."
    },
    "stella": {
        "tags": ["Feinstein2020"],
        "logo": "img/stella.png",
        "language": "python",
        "category": "stars",
        "keywords": ["flares", "stellar activity", "machine learning", "neural networks"],
        "description": "stella is a Python package to create and train a neural network to identify stellar flares.",
        "link": "https://github.com/afeinstein20/stella",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/afeinstein20/stella",
        "custom_citation": ""
    },
    "GWFish": {
        "tags": ["DupletsaHarms2023"],
        "logo": "img/gwfish-1.png",
        "language": "python",
        "category": "gravitational waves",
        "keywords": ["gravitational waves", "fisher", "black holes"],
        "description": "Simulation of gravitational-wave detector networks with Fisher-matrix PE",
        "link": "https://github.com/janosch314/GWFish",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/janosch314/GWFish",
        "custom_citation": ""
    },
    "CAMELS": {
        "tags": [ "CAMELS_presentation", "CAMELS_DR1", "CAMELS_DR2"],
        "logo": "img/CAMELS.png",
        "language": "python",
        "category": "population synthesis",
        "keywords": ["CAMELS", "cosmology simulations", "galaxies"],
        "description": "CAMELS stands for Cosmology and Astrophysics with MachinE Learning Simulations, and it is a project that aims at building bridges between cosmology and astrophysics through numerical simulations and machine learning.",
        "link": "https://camels.readthedocs.io/en/latest/",
        "zenodo_doi": "",
        "attribution_link": "https://camels.readthedocs.io/en/latest/citation.html",
        "custom_citation": "\\footnote{TODO: If you use data from CAMELS-SAM please consider citing the CMD paper  \\citet{CMD} If you use data from CAMELS-SAM please consider citing the CAMELS-SAM paper \\citet{CAMELS-SAM}}"
    },
    "JAX": {
        "tags": [ "jax2018github"],
        "logo": "img/jax.png",
        "language": "python",
        "category": "computing",
        "keywords": ["jax", "computing", "AI"],
        "description": "JAX is a Python library for accelerator-oriented array computation and program transformation, designed for high-performance numerical computing and large-scale machine learning.",
        "link": "https://github.com/google/jax?tab=readme-ov-file",
        "zenodo_doi": "",
        "attribution_link": "https://github.com/google/jax?tab=readme-ov-file#citing-jax",
        "custom_citation": ""
    },
    "Cython": {
        "tags": [ "cython:2011"],
        "logo": "img/cython.png",
        "language": "python",
        "category": "computing",
        "keywords": ["C++", "computing", "python"],
        "description": "Cython is a Python language extension that allows explicit type declarations and is compiled directly to C. As such, it addresses Python's large overhead for numerical loops and the difficulty of efficiently using existing C and Fortran code, which Cython can interact with natively.",
        "link": "https://github.com/cython/cython?tab=readme-ov-file",
        "zenodo_doi": "",
        "attribution_link": "https://cython.org/",
        "custom_citation": ""
    },
    "scikit-image": {
        "tags": [ "scikit-image"],
        "logo": "img/scikit-image.png",
        "language": "python",
        "category": "visualisation",
        "keywords": ["python", "computing", "visualization"],
        "description": "scikit-image is a collection of algorithms for image processing. ",
        "link": "https://scikit-image.org/",
        "zenodo_doi": "",
        "attribution_link": "https://scikit-image.org/",
        "custom_citation": ""
    },
    "scikit-learn": {
        "tags": [ "scikit-learn", "sklearn_api"],
        "logo": "img/scikit-learn.png",
        "language": "python",
        "category": "machine learning",
        "keywords": ["python", "computing", "machine learning"],
        "description": "scikit-learn is a Python module for machine learning built on top of SciPy and is distributed under the 3-Clause BSD license. ",
        "link": "https://scikit-learn.org/stable/",
        "zenodo_doi": "10.5281/zenodo.591564",
        "attribution_link": "https://github.com/scikit-learn/scikit-learn?tab=readme-ov-file",
        "custom_citation": ""
    },
    "Numba": {
        "tags": [ "numba:2015"],
        "logo": "img/numba.png",
        "logo_background": true,
        "language": "python",
        "category": "computing",
        "keywords": ["machine learning", "computing", "python"],
        "description": "Numba is an open source JIT compiler that translates a subset of Python and NumPy code into fast machine code.",
        "link": "https://numba.pydata.org/",
        "zenodo_doi": "10.5281/zenodo.4343230",
        "attribution_link": "https://numba.readthedocs.io/en/stable/user/faq.html#how-do-i-reference-cite-acknowledge-numba-in-other-work",
        "custom_citation": ""
    },
    "IRAF":{
        "tags": ["1993ASPC...52..173T", "1986SPIE..627..733T"],
        "logo": "img/IRAF.png",
        "language": "C",
        "category": "imaging",
        "keywords": ["imaging", "data reduction", "observations", "images"],
        "description": "IRAF is the Image Reduction and Analysis Facility, a general purpose software system for the reduction and analysis of astronomical data.",
        "link": "https://iraf-community.github.io/",
        "zenodo_doi": "",
        "attribution_link": "https://iraf-community.github.io/",
        "custom_citation": ""
    },
    "julia": {
        "tags": ["bezanson2017julia"],
        "logo": "img/julia.png",
        "language": "julia",
        "category": "general",
        "keywords": ["programming", "computing"],
        "description": "The Julia programming language is a flexible dynamic language, appropriate for scientific and numerical computing, with performance comparable to traditional statically-typed languages.",
        "link": "https://docs.julialang.org/en/v1/",
        "zenodo_doi": "",
        "attribution_link": "https://epubs.siam.org/doi/10.1137/141000671",
        "custom_citation": ""
    },
    "Lightkurve": {
        "tags": [
            "2018ascl.soft12013L"
        ],
        "logo": "",
        "language": "Python",
        "category": "Data Handling",
        "keywords": [
            "photometry",
            " Kepler",
            " TESS"
        ],
        "description": "Lightkurve offers a user-friendly way to analyze time series data on the brightness of planets, stars, and galaxies. The package is focused on supporting science with NASA’s Kepler and TESS.",
        "link": "https://docs.lightkurve.org/",
        "attribution_link": "https://docs.lightkurve.org/about/citing.html",
        "zenodo_doi": "10.5281/zenodo.1181928",
        "custom_citation": ""
    }
}